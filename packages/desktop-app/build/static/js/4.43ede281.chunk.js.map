{"version":3,"sources":["remote-component.config.js","pages/display-app/components.js","RemoteComponent.js","pages/DisplayApp.js"],"names":["module","exports","resolve","react","require","moment","i18n","init","TabText","styled","Text","PageContainer","div","WidgetWrapper","IconDiv","props","open","widgetTheme","EmptyDiv","WidgetContainer","Flex","ModalBackground","SearchContainer","width","left","top","SettingsDiv","BlurImageDiv","DotsContainer","colors","keyframes","Dot","DotLoader","theme","useTheme","console","log","WidgetList","React","memo","widgetList","widgetData","currentUser","dataSources","userDataConnectors","Object","keys","dataConnectors","map","Widget","i","widgetDataSource","length","userDataSourceStatus","indexOf","status","dataSourceType","sourceType","style","widget","size","height","margin","backgroundImage","image","bottom","padding","position","textAlign","textStyle","color","title","shortDescription","paddingLeft","display","justifyContent","zIndex","data","settings","currentSettings","SettingsDialog","widgetIndex","widgetSettings","onUpdate","inputFields","useRef","timezones","inputRef","useState","fieldInit","setFieldInit","useEffect","forEach","f","current","fieldTypeCheck","s","type","push","tz","names","timezone","text","format","offset","utcOffset","useFormFields","fields","handleChange","tzOffset","value","target","id","m","mt","ml","mr","setting","Fragment","placeholder","label","mb","field","name","defaultValue","onChange","ref","t","ii","onClick","e","hasOwnProperty","SearchBox","forwardRef","showHistory","chevronOpen","searchKey","searchOpen","saveSearchKey","search","searchRef","LeftIcon","iconify","bxSearchAlt2","InputField","autoFocus","__","onKeyDown","key","prevState","RightIcon","bxChevronUp","bxChevronDown","SearchResults","searchBox","roleKey","saveSearchResult","boxRect","getBoundingClientRect","containerProps","content","setContent","useFetch","error","isLoading","setUrl","GOOGLE_URL","SEARCH_ENGINE","encodeURIComponent","API_KEY","items","item","href","link","itemIndex","parseInt","currentTarget","dataset","fontSize","snippet","SearchHistory","searchHistory","requires","createRequires","RemoteComponent","createRemoteComponent","config","appSync","aws_appsync_graphqlEndpoint","main_region","aws_appsync_authenticationType","cognito","USER_POOL_ID","IDENTITY_POOL_ID","APP_CLIENT_ID","S3Config","AWSS3","bucket","S3","region","DisplayApp","widgetConfigData","appSyncClient","prifinaID","usePrifina","check","setSettings","getLocalization","getSettings","getCallbacks","registerClient","Prifina","API","activeRole","WidgetHooks","appId","Amplify","configure","setWidgetList","widgetConfig","activeTab","setActiveTab","setOpen","flipped","setFlipped","finish","setFinish","imageCache","transform","backgroundColor","background","animationItems","_","index","useSprings","from","opacity","mass","tension","friction","springs","setSprings","refs","settingsRef","w","appID","installCount","promises","src","Promise","reject","img","Image","onload","onerror","all","then","cachedImages","GRAPHQL","Storage","widgets","ww","document","querySelectorAll","onRest","to","SpringConfig","molasses","duration","openSettings","className","url","newSettings","JSON","parse","stringify","k","currentAppId","c","widgetInstallCount","borderRadius","visibility","backgroundSize","spring","PrifinaLogo","overflow","tab","variant","paddingBottom"],"mappings":"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","file":"static/js/4.43ede281.chunk.js","sourcesContent":["/**\n * Dependencies for Remote Components\n */\nmodule.exports = {\n  resolve: {\n    react: require(\"react\"),\n    \"styled-components\": require(\"styled-components\"),\n    \"styled-system\": require(\"styled-system\"),\n    \"react-dnd\": require(\"react-dnd\"),\n    \"react-dnd-html5-backend\": require(\"react-dnd-html5-backend\"),\n    \"@prifina/hooks\": require(\"@prifina/hooks\"),\n    moment: require(\"moment\"),\n    \"moment-timezone\": require(\"moment-timezone\"),\n  },\n};\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\n\nimport React, { useRef, forwardRef, useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport {\n  Box,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Divider,\n  IconField,\n  Label,\n  Select,\n} from \"@blend-ui/core\";\n//import { useFormFields } from \"../../lib/formFields\";\nimport bxSearchAlt2 from \"@iconify/icons-bx/bx-search-alt-2\";\nimport bxChevronUp from \"@iconify/icons-bx/bx-chevron-up\";\nimport bxChevronDown from \"@iconify/icons-bx/bx-chevron-down\";\n\n//import useFetch from \"../../lib/hooks/useFetch\";\nimport { API_KEY, GOOGLE_URL, SEARCH_ENGINE } from \"../../config\";\n\n//import i18n from \"../../lib/i18n\";\nimport { i18n, useFetch, useFormFields } from \"@prifina-apps/utils\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport PropTypes from \"prop-types\";\n\nimport { useTheme } from \"@blend-ui/core\";\n\ni18n.init();\n\n/*\nposition: absolute;\nwidth: 1309px;\nheight: 716px;\nleft: 64px;\ntop: 182px;\n\nbackground: #FFFFFF;\nbox-shadow: 0px -4px 8px #F5F6F6;\n*/\nexport const TabText = styled(Text)`\n  padding-left: 20px;\n  padding-top: 25px;\n`;\n\nexport const PageContainer = styled.div`\n  margin-left: 64px;\n  margin-right: 64px;\n  margin-top: 24px;\n\n  background: #ffffff;\n  box-shadow: 0px -4px 8px #f5f6f6;\n`;\n\nexport const WidgetWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 2px outset;\n  border-radius: 8px;\n  /*\n  margin: 10px;\n  min-height: 200px;\n  min-width: 200px;\n  */\n`;\n/*\ndiv {\n  width: 100px;\n  height: 100px;\n  background-image: radial-gradient(circle, black 10px, transparent 11px);\n  background-size: 100% 33.33%;\n}\n{\n    height: 20px;\n    width: 30px;\n    position: relative;\n    left: 188px;\n    top: 41px;\n    opacity: 1;\n    cursor: pointer;\n    background-image: radial-gradient(circle,black 2px,transparent 0px);\n    background-size: 100% 33.33%;\n}\n*/\n/*\nexport const IconDiv = styled.div`\n  height: 24px;\n  position: relative;\n  left: 197px;\n  top: 23px;\n  opacity: 0;\n  cursor: ${props => (props.open ? \"default\" : \"pointer\")};\n  &:hover {\n    opacity: ${props => (props.open ? 0 : 1)};\n  }\n`;\n*/\n\nexport const IconDiv = styled.div`\n  &:hover {\n    transform: scale(0.9);\n    box-shadow: 3px 2px 30px 1px rgb(0 0 0 / 24%);\n  }\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  left: 275px;\n  top: 20px;\n  opacity: 1;\n  cursor: ${props => (props.open ? \"default\" : \"pointer\")};\n  background-image: radial-gradient(\n    circle,\n    ${props => (props.widgetTheme === \"dark\" ? \"white\" : \"black\")} 2px,\n    transparent 0px\n  );\n  background-size: 100% 33.33%;\n  z-index: 10;\n`;\n\nexport const EmptyDiv = styled.div`\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  left: 180px;\n  top: 20px;\n  opacity: 1;\n`;\nexport const WidgetContainer = styled(Flex)`\n  /*\nwidth: 100%;\nheight: 100vh;\ndisplay: flex;\n*/\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-content: flex-start;\n  justify-content: flex-start;\n  position: relative;\n  top: 0px;\n  left: 0px;\n  overflow-y: auto;\n`;\nexport const ModalBackground = styled.div`\n  width: 100%;\n  height: 100vh;\n  z-index: 40;\n  background-color: rgba(30, 29, 29, 0.3);\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n/*\nexport const SearchModal = styled.div`\nwidth: 100%;\nheight: 100vh;\nz-index: 15;\nbackground-color: rgba(30, 29, 29, 0.3);\nposition: absolute;\nleft: 0;\ntop: 0;\n`;\n*/\nexport const SearchContainer = styled.div`\n  width: ${props => props.width}px;\n  /* height: 100vh; */\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: 20;\n  background-color: white;\n  position: absolute;\n  left: ${props => props.left}px;\n  top: ${props => props.top}px;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\nexport const SettingsDiv = styled.div`\n  background-color: white;\n  width: 100%;\n  height: 100%;\n  /*border: 2px outset; */\n  border-radius: 8px;\n  z-index: 50;\n`;\n\n/*\n.bg-image {\n  \n  background-image: url(\"photographer.jpg\");\n\n  filter: blur(8px);\n  -webkit-filter: blur(8px);\n\n  height: 100%;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n*/\nexport const BlurImageDiv = styled.div`\n  filter: blur(4px);\n  -webkit-filter: blur(4px);\n\n  height: 100%;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nconst dots = colors => keyframes`\n{\n  10% {\n   background-color: ${colors[0]}; \n  }\n  0%, 20%,100% {\n    background-color: ${colors[1]};\n  }\n}\n`;\n\nconst DotsContainer = styled.div`\n  color: ${props => (props.widgetTheme === \"dark\" ? \"white\" : \"black\")};\n  position: absolute;\n  top: 110px;\n  height: 69px;\n  width: 69px;\n  margin: 0 10px 0 0;\n  text-align: left;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 5px solid\n    ${props => (props.widgetTheme === \"dark\" ? \"white\" : \"black\")};\n  border-radius: 50%;\n  z-index: 20;\n  div {\n    animation: ${props =>\n        dots(\n          props.widgetTheme === \"dark\" ? [\"white\", \"gray\"] : [\"black\", \"gray\"],\n        )}\n      4s linear infinite;\n  }\n  div:nth-child(1) {\n    animation-delay: 1s;\n  }\n\n  div:nth-child(2) {\n    animation-delay: 2s;\n  }\n  div:nth-child(3) {\n    animation-delay: 3s;\n  }\n`;\n\nconst Dot = styled.div`\n  position: relative;\n\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${props =>\n    props.widgetTheme === \"dark\" ? \"white\" : \"black\"}\n\n  float: left;\n  z-index: 21;\n  margin-right: 9px;\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\nconst DotLoader = props => {\n  const theme = useTheme();\n  console.log(theme.colors);\n  return (\n    <DotsContainer theme={theme} {...props}>\n      <Dot theme={theme} {...props} />\n      <Dot theme={theme} {...props} />\n      <Dot theme={theme} {...props} />\n    </DotsContainer>\n  );\n};\n\nexport const WidgetList = React.memo(\n  ({ widgetList, widgetData, currentUser, dataSources }) => {\n    // currentUser\n    // localization\n    // settings\n    console.log(\"WIDGET LIST \", widgetList);\n    console.log(\"WIDGET DATA\", widgetData);\n    console.log(\"WIDGET USER\", currentUser);\n    console.log(\"DATASOURCES\", dataSources);\n    const userDataConnectors = Object.keys(currentUser.dataConnectors);\n    //const dataSources = { \"@prifina/google-timeline\": { sourceType: 2 } };\n    return (\n      <>\n        {widgetList.map((Widget, i) => {\n          // only first datasource is used ????\n          const widgetDataSource = widgetData[i].dataConnectors[0];\n\n          if (widgetData[i].dataConnectors.length > 0) {\n            // data source is not connected....\n            let userDataSourceStatus = 0;\n            if (\n              userDataConnectors.length > 0 &&\n              userDataConnectors.indexOf(widgetDataSource) > -1\n            ) {\n              // check dataSource status\n              userDataSourceStatus =\n                currentUser.dataConnectors[widgetDataSource].status;\n            }\n\n            const dataSourceType = dataSources[widgetDataSource].sourceType;\n            console.log(\"DATASOURCE TYPE\", i, widgetDataSource, dataSourceType);\n            if (userDataSourceStatus < 2) {\n              return (\n                <div\n                  key={\"widget-processing-\" + i}\n                  style={{\n                    width: widgetData[i].widget.size.width + \"px\",\n                    height: widgetData[i].widget.size.height + \"px\",\n                    margin: \"10px\",\n                  }}\n                >\n                  <EmptyDiv />\n                  <WidgetWrapper key={\"widget-wrapper-\" + i}>\n                    <BlurImageDiv\n                      key={\"prifina-widget-\" + i}\n                      style={{\n                        backgroundImage: `url(${widgetData[i].widget.image})`,\n                      }}\n                    />\n\n                    <div\n                      style={{\n                        width: widgetData[i].widget.size.width + \"px\",\n                        bottom: \"60px\",\n                        padding: \"10px\",\n                        position: \"absolute\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <Text\n                        textStyle={\"h6\"}\n                        color={\n                          widgetData[i].widget.theme === \"dark\"\n                            ? \"white\"\n                            : \"black\"\n                        }\n                      >\n                        {widgetData[i].widget.title}\n                      </Text>\n                      <Text\n                        textStyle={\"caption\"}\n                        color={\n                          widgetData[i].widget.theme === \"dark\"\n                            ? \"white\"\n                            : \"black\"\n                        }\n                      >\n                        {widgetData[i].widget.shortDescription}\n                      </Text>\n                    </div>\n                    <div\n                      style={{\n                        width: widgetData[i].widget.size.width + \"px\",\n                        bottom: \"15px\",\n                        paddingLeft: \"10px\",\n                        position: \"absolute\",\n                      }}\n                    >\n                      {userDataSourceStatus === 0 && (\n                        <Button>\n                          {dataSourceType === 1 ? \"Connect Data\" : \"Import\"}\n                        </Button>\n                      )}\n                      {userDataSourceStatus === 1 && <Button>Activate</Button>}\n                    </div>\n                  </WidgetWrapper>\n                </div>\n              );\n            }\n\n            // processing\n            if (userDataSourceStatus === 2) {\n              return (\n                <div\n                  key={\"widget-processing-\" + i}\n                  style={{\n                    width: widgetData[i].widget.size.width + \"px\",\n                    height: widgetData[i].widget.size.height + \"px\",\n                    margin: \"10px\",\n                  }}\n                >\n                  <EmptyDiv />\n                  <WidgetWrapper key={\"widget-wrapper-\" + i}>\n                    <BlurImageDiv\n                      key={\"prifina-widget-\" + i}\n                      style={{\n                        backgroundImage: `url(${widgetData[i].widget.image})`,\n                      }}\n                    />\n                    <div\n                      key={\"widget-dot-\" + i}\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        top: \"0px\",\n                        zIndex: 19,\n                      }}\n                    >\n                      <DotLoader widgetTheme={widgetData[i].widget.theme} />\n                      <div\n                        style={{\n                          width: widgetData[i].widget.size.width + \"px\",\n                          bottom: \"70px\",\n                          padding: \"5px\",\n                          position: \"absolute\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <Text\n                          textStyle={\"h6\"}\n                          color={\n                            widgetData[i].widget.theme === \"dark\"\n                              ? \"white\"\n                              : \"black\"\n                          }\n                        >\n                          Prosessing your data...\n                        </Text>\n                        <Text\n                          textStyle={\"caption\"}\n                          color={\n                            widgetData[i].widget.theme === \"dark\"\n                              ? \"white\"\n                              : \"black\"\n                          }\n                        >\n                          You will be notified as soon as the data becomes\n                          available in your cloud.\n                        </Text>\n                      </div>\n                    </div>\n                  </WidgetWrapper>\n                </div>\n              );\n            }\n          }\n          return (\n            <Widget\n              data={{\n                settings: widgetData[i].currentSettings,\n                currentUser: currentUser,\n              }}\n              key={\"prifina-widget-\" + i}\n            />\n          );\n        })}\n      </>\n    );\n  },\n);\n\nWidgetList.propTypes = {\n  widgetList: PropTypes.array.isRequired,\n  widgetData: PropTypes.array.isRequired,\n  currentUser: PropTypes.object,\n};\n\n//moment.tz.guess()\n//console.log(\"MOMENT \", moment.tz.names());\n/*\n  var select = document.getElementById('timezones');\nmoment.tz.names().forEach(function(timezone){\n\tvar option = document.createElement('option');\n  option.textContent = timezone + ': ' + moment.tz(timezone).format('Z');\n  select.appendChild(option);\n});\n*/\n/*\nmoment.tz.names().forEach(function (timezone) {\n  //console.log(moment.tz(timezone).utcOffset());\n});\n*/\n//console.log(moment.tz.names());\n/*\n<Label htmlFor=\"cabinClass\">Cabin Class</Label>\n<Select\n  id=\"cabinClass\"\n  name=\"cabinClass\"\n  defaultValue=\"Premium Economy\"\n  onChange={changeAction}\n>\n  <option>Economy</option>\n  <option>Premium Economy</option>\n  <option>Business</option>\n  <option>First Class</option>\n  <option>\n    With a super long label that doesn't get clobbered by the chevron\n  </option>\n</Select>\n*/\n\nexport const SettingsDialog = ({\n  widgetIndex,\n  widgetSettings,\n  onUpdate,\n  ...props\n}) => {\n  //const currentSettings = widgetSettings[widget];\n  console.log(\"SETTINGS \", widgetIndex, widgetSettings);\n  let inputFields = useRef({});\n  let timezones = useRef([]);\n  const inputRef = useRef();\n  const [fieldInit, setFieldInit] = useState(false);\n  useEffect(() => {\n    Object.keys(widgetSettings.currentSettings).forEach(f => {\n      inputFields.current[f] = widgetSettings.currentSettings[f];\n    });\n    console.log(\"FLDS \", inputFields);\n    console.log(\"DIALOG \", props);\n    let fieldTypeCheck = [];\n    widgetSettings.settings.forEach(s => {\n      console.log(s);\n      if (fieldTypeCheck.indexOf(s.type) === -1) fieldTypeCheck.push(s.type);\n    });\n    //console.log(fieldTypeCheck);\n\n    // have timezone field type...\n    if (fieldTypeCheck.indexOf(\"TZ\") > -1) {\n      moment.tz.names().forEach(function (timezone) {\n        timezones.current.push({\n          text: timezone + \": \" + moment.tz(timezone).format(\"Z\"),\n          tz: timezone,\n          offset: moment.tz(timezone).utcOffset(),\n        });\n      });\n    }\n    setFieldInit(true);\n  }, []);\n  //console.log(timezones);\n\n  const [fields, handleChange] = useFormFields(inputFields.current);\n\n  console.log(\"RENDER FIELDS \", fields, inputFields);\n\n  if (timezones.current.length > 0) {\n    const tzOffset = moment.tz(fields.tz).utcOffset();\n    console.log(\"TZ \", inputFields, tzOffset);\n    if (tzOffset !== inputFields.current.offset) {\n      inputFields.current.offset = tzOffset;\n      inputFields.current.tz = fields.tz;\n      console.log(\"INPUT \", inputRef);\n      if (inputRef.current) {\n        inputRef.current.value = tzOffset;\n      }\n\n      handleChange({\n        target: {\n          id: \"offset\",\n          value: tzOffset,\n        },\n      });\n    }\n  }\n\n  return (\n    <Box m={2}>\n      <Text textStyle={\"h3\"} textAlign={\"center\"} mt={10}>\n        {widgetSettings.title}\n      </Text>\n      <Divider />\n      {fieldInit && (\n        <Box mt={10} ml={5} mr={5}>\n          {widgetSettings.settings.map((setting, i) => {\n            return (\n              <React.Fragment key={\"settings-\" + i}>\n                {setting.type === \"text\" && (\n                  <Input\n                    mt={15}\n                    key={\"widget-setting-\" + i}\n                    placeholder={setting.label}\n                    mb={2}\n                    id={setting.field}\n                    name={setting.field}\n                    defaultValue={fields[setting.field]}\n                    onChange={handleChange}\n                    ref={inputRef}\n                  />\n                )}\n                {setting.type === \"TZ\" && (\n                  <>\n                    <Label key={\"setting-label-\" + i} mt={10}>\n                      {setting.label}\n                    </Label>\n                    <Select\n                      mb={10}\n                      size={\"sm\"}\n                      key={\"widget-setting-\" + i}\n                      id={setting.field}\n                      name={setting.field}\n                      defaultValue={fields[setting.value]}\n                      onChange={handleChange}\n                    >\n                      {timezones.current.map((t, ii) => {\n                        return (\n                          <option\n                            key={\"widget-setting-\" + i + \"-\" + ii}\n                            value={t.tz}\n                          >\n                            {t.text}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n          <Box mt={10}>\n            <Button\n              width={\"100%\"}\n              onClick={e => {\n                console.log(\"UPDATE BUTTON \", fields);\n                //console.log(fields);\n                if (timezones.length > 0 && fields.hasOwnProperty(\"tz\")) {\n                  onUpdate({\n                    tz: fields.tz,\n                    offset: moment.tz(fields.tz).utcOffset(),\n                  });\n                } else {\n                  onUpdate(fields);\n                }\n                //console.log(\"UPDATE CLICK \", e.target.className);\n                //onUpdate(fields);\n              }}\n            >\n              Update\n            </Button>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nSettingsDialog.propTypes = {\n  widgetIndex: PropTypes.number.isRequired,\n  widgetSettings: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport const SearchBox = forwardRef(\n  ({ showHistory, chevronOpen, searchKey, searchOpen, saveSearchKey }, ref) => {\n    const [fields, handleChange] = useFormFields({\n      search: \"\",\n    });\n    const searchRef = useRef();\n    return (\n      <Box ml={10} mr={10} ref={ref}>\n        <IconField>\n          <IconField.LeftIcon\n            iconify={bxSearchAlt2}\n            color={\"componentPrimary\"}\n            size={\"17\"}\n          />\n          <IconField.InputField\n            ref={searchRef}\n            autoFocus={true}\n            placeholder={i18n.__(\"Search\")}\n            id={\"search\"}\n            name={\"search\"}\n            onChange={handleChange}\n            onKeyDown={e => {\n              if (e.key === \"Enter\") {\n                //console.log(\"SEARCH ....\", fields.search);\n                saveSearchKey(fields.search);\n                searchKey(fields.search);\n              }\n            }}\n          />\n          <Box\n            display={\"inline-flex\"}\n            onClick={() => {\n              if (!searchOpen) {\n                showHistory(prevState => !prevState);\n              }\n              searchRef.current.value = \"\";\n              searchKey(\"\");\n            }}\n          >\n            <IconField.RightIcon\n              iconify={chevronOpen || searchOpen ? bxChevronUp : bxChevronDown}\n              color={\"componentPrimary\"}\n              size={\"17\"}\n            />\n          </Box>\n        </IconField>\n      </Box>\n    );\n  },\n);\nSearchBox.propTypes = {\n  showHistory: PropTypes.func.isRequired,\n  chevronOpen: PropTypes.bool.isRequired,\n  searchKey: PropTypes.func.isRequired,\n  searchOpen: PropTypes.bool,\n  saveSearchKey: PropTypes.func.isRequired,\n};\n\nexport const SearchResults = props => {\n  const { searchBox, searchKey, roleKey, saveSearchResult } = props;\n  //console.log(searchBox);\n  //console.log(searchBox.current.getBoundingClientRect());\n  const boxRect = searchBox.current.getBoundingClientRect();\n  const containerProps = {\n    width: boxRect.width,\n    left: boxRect.left,\n    top: boxRect.top + boxRect.height + 5,\n  };\n  console.log(containerProps);\n\n  console.log(\"NEW SEARCH \", searchKey);\n  const [content, setContent] = useState(null);\n  const { data, error, isLoading, setUrl } = useFetch();\n  /*\n  setUrl(\n    `${GOOGLE_URL}?cx=${SEARCH_ENGINE}&exactTerms=${\n      roleKey.length > 0 ? encodeURIComponent(roleKey) : \"\"\n    }&q=${encodeURIComponent(searchKey)}&lr=lang_en&key=${API_KEY}`,\n  );\n*/\n  //let searchHistory = [];\n  /*\n  let searchHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n  if (searchHistory === null) {\n    searchHistory = [];\n  } else {\n    searchHistory.unshift({ search: searchKey });\n  }\n  localStorage.setItem(\"searchHistory\", JSON.stringify(searchHistory));\n*/\n  useEffect(() => {\n    if (!isLoading)\n      setUrl(\n        `${GOOGLE_URL}?cx=${SEARCH_ENGINE}&exactTerms=${\n          roleKey.length > 0 ? encodeURIComponent(roleKey) : \"\"\n        }&q=${encodeURIComponent(searchKey)}&lr=lang_en&key=${API_KEY}`,\n      );\n    if (error) setContent(<h2>Error when fetching: {error}</h2>);\n    if (!data && isLoading) setContent(<h2>LOADING...</h2>);\n    if (!data && !isLoading) setContent(null);\n    if (data) {\n      //console.log(Object.keys(data));\n      console.log(data);\n      const items = data.items.map((item, i) => {\n        return (\n          <li key={\"search-result-\" + i}>\n            <div>\n              <a\n                href={item.link}\n                data-link={i}\n                onClick={e => {\n                  const itemIndex = parseInt(e.currentTarget.dataset[\"link\"]);\n                  console.log(\"LINK CLICK \", data.items[itemIndex]);\n                  saveSearchResult(searchKey, data.items[itemIndex]);\n                }}\n                target={\"_blank\"}\n              >\n                {item.title}\n              </a>\n            </div>\n            <div style={{ fontSize: \"0.75rem\" }}>{item.snippet}</div>\n          </li>\n        );\n      });\n      setContent(<ol>{items}</ol>);\n    }\n  }, [searchKey, error, isLoading, data]);\n  /*\n  const getContent = newSearch => {\n    if (error) return <h2>Error when fetching: {error}</h2>;\n    if (!data && isLoading) return <h2>LOADING...</h2>;\n    if (!data) return null;\n    console.log(Object.keys(data));\n    console.log(data);\n    console.log(\"NEW SEARCH2 \", searchKey);\n    console.log(\"NEW SEARCH3 \", newSearch);\n    console.log(\"NEW SEARCH4 \", prevSearchKey);\n\n    prevSearchKey.current = newSearch;\n    return (\n      <ol>\n        {data.items.map((item, i) => {\n          return (\n            <li key={\"search-result-\" + i}>\n              <div>\n                <a href={item.link} target={\"_blank\"}>\n                  {item.title}\n                </a>\n              </div>\n              <div style={{ fontSize: \"0.75rem\" }}>{item.snippet}</div>\n            </li>\n          );\n        })}\n      </ol>\n    );\n  };\n*/\n\n  return (\n    <>\n      <SearchContainer {...containerProps}>\n        <Text textStyle={\"h4\"}>Search results</Text>\n        <Divider />\n        {content}\n      </SearchContainer>\n    </>\n  );\n};\nSearchResults.propTypes = {\n  searchBox: PropTypes.object.isRequired,\n  searchKey: PropTypes.string,\n  roleKey: PropTypes.string,\n  saveSearchResult: PropTypes.func.isRequired,\n};\n\nexport const SearchHistory = props => {\n  const { searchBox } = props;\n  console.log(\"HISTORY \", searchBox);\n  //console.log(searchBox.current.getBoundingClientRect());\n  const boxRect = searchBox.current.getBoundingClientRect();\n  const containerProps = {\n    width: boxRect.width,\n    left: boxRect.left,\n    top: boxRect.top + boxRect.height + 5,\n  };\n  console.log(containerProps);\n  let searchHistory = [];\n  /*\n  let searchHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n  if (searchHistory === null) {\n    searchHistory = [{ search: \"Testing...\" }];\n  }\n*/\n  /*\n    localStorage.setItem(\n      \"WidgetImage\",\n      JSON.stringify({ image: res.target.result })\n    );\n    */\n\n  return (\n    <>\n      <SearchContainer {...containerProps}>\n        <Text textStyle={\"h4\"}>Search history</Text>\n        <Divider />\n        <ol>\n          {searchHistory.length > 0 &&\n            searchHistory.map((item, i) => {\n              return <li key={\"search-\" + i}>{item.search}</li>;\n            })}\n        </ol>\n      </SearchContainer>\n    </>\n  );\n};\n\nSearchHistory.propTypes = {\n  searchBox: PropTypes.object.isRequired,\n};\n","import {\n  createRequires,\n  createRemoteComponent,\n} from \"@paciolan/remote-component\";\n\nimport { resolve } from \"./remote-component.config.js\";\n\nconst requires = createRequires(resolve);\n\nexport const RemoteComponent = createRemoteComponent({ requires });\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/display-name */\n/* eslint-disable react/no-multi-comp */\n\nimport React, { useRef, useState, useEffect, forwardRef } from \"react\";\nimport { usePrifina } from \"@prifina/hooks\";\nimport { BlendIcon } from \"@blend-ui/icons\";\nimport bxCog from \"@iconify/icons-bx/bx-cog\";\n\n//import html2canvas from \"html2canvas\";\n//import ReactDOM from \"react-dom\";\nimport {\n  useSpring,\n  useSprings,\n  animated,\n  config as SpringConfig,\n} from \"@react-spring/web\";\n\nimport { RemoteComponent } from \"../RemoteComponent\";\nimport { Tabs, Tab, TabList, TabPanel, TabPanelList } from \"@blend-ui/tabs\";\n//import i18n from \"../lib/i18n\";\n\n//import widgetData from \"./widgetData\";\n//import installedWidgets from \"./installedWidgets\";\n\nimport Amplify, { API as GRAPHQL, Storage } from \"aws-amplify\";\nimport config from \"../config\";\n\nimport gql from \"graphql-tag\";\n\nimport * as C from \"./display-app/components\";\n\n//import { addSearchResultMutation, addSearchKeyMutation } from \"../graphql/api\";\n/*\nimport { addSearchResult, addSearchKey } from \"../graphql/mutations\";\n*/\nimport { addSearchResult, addSearchKey, i18n } from \"@prifina-apps/utils\";\n\nimport { PrifinaLogo } from \"../components/PrifinaLogo\";\nimport PropTypes from \"prop-types\";\n\nconst short = require(\"short-uuid\");\ni18n.init();\n\nconst APIConfig = {\n  aws_appsync_graphqlEndpoint: config.appSync.aws_appsync_graphqlEndpoint,\n  aws_appsync_region: config.main_region,\n  aws_appsync_authenticationType: config.appSync.aws_appsync_authenticationType,\n};\n\nconst AUTHConfig = {\n  // To get the aws credentials, you need to configure\n  // the Auth module with your Cognito Federated Identity Pool\n  mandatorySignIn: false,\n  userPoolId: config.cognito.USER_POOL_ID,\n  identityPoolId: config.cognito.IDENTITY_POOL_ID,\n  userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  region: config.main_region,\n};\n\nconst S3Config = {\n  AWSS3: {\n    bucket: config.S3.bucket, //REQUIRED -  Amazon S3 bucket name\n    region: config.S3.region, //OPTIONAL -  Amazon service region\n  },\n};\n\nconst fn = animations => index => animations[index];\n\nconst DisplayApp = ({\n  widgetConfigData,\n  appSyncClient,\n  prifinaID,\n  dataSources,\n}) => {\n  console.log(\"PROPS \", widgetConfigData, Object.keys(widgetConfigData));\n  console.log(\"DISPLAY APP \", prifinaID);\n  const {\n    check,\n    currentUser,\n    getLocalization,\n    getSettings,\n    setSettings,\n    getCallbacks,\n    registerClient,\n    API,\n    Prifina,\n    activeRole,\n  } = usePrifina();\n\n  console.log(\"DISPLAY APP \", currentUser);\n  console.log(\"DISPLAY APP DATASOURCES\", dataSources);\n  const WidgetHooks = new Prifina({ appId: \"WIDGETS\" });\n  //console.log(check());\n  Amplify.configure(S3Config);\n\n  const [widgetList, setWidgetList] = useState([]);\n  const [widgetConfig, setWidgetConfig] = useState(widgetConfigData);\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  const [searchHistory, setSearchHistory] = useState(false);\n  const searchBox = useRef();\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  const [open, setOpen] = useState(false);\n  const [flipped, setFlipped] = useState(false);\n  const [finish, setFinish] = useState(false);\n  //const [imagesReady, setImagesReady] = useState(false);\n  //const widgetImage = useRef();\n  const imageCache = useRef([]);\n\n  const settings = useRef({\n    left: \"0px\",\n    top: \"0px\",\n    height: \"0px\",\n    width: \"0px\",\n    widget: -1,\n  });\n\n  /*\n  const images = [\n    \"https://prifina-apps-352681697435.s3.amazonaws.com/fNBCsuKbikFG7VahRjRNaN/assets/Clock.png\",\n    \"https://prifina-apps-352681697435.s3.amazonaws.com/fNBCsuKbikFG7VahRjRNaN/assets/Sunny.png\",\n  ];\n*/\n  //const items = [{}, {}];\n  const items = [\n    {\n      //transform: `perspective(1000px) rotateY(360deg)`,  // right-to-left\n      transform: `perspective(1000px) rotateY(0deg)`,\n      backgroundColor: `currentColor`,\n      background: null,\n      /* \"https://prifina-apps-352681697435.s3.amazonaws.com/fNBCsuKbikFG7VahRjRNaN/assets/Sunny.png\", */\n    },\n    {\n      transform: null,\n      background: \"\",\n      backgroundColor: `white`,\n    },\n  ];\n  const animationItems = useRef(items.map((_, index) => index));\n  console.log(\"ITEMS \", animationItems);\n  const [springs, setSprings] = useSprings(items.length, index => {\n    return {\n      from: {\n        transform: items[index].transform,\n        opacity: 1,\n        width: \"300px\",\n        height: \"300px\",\n      },\n      config: {\n        mass: 5,\n        tension: 400,\n        friction: 150,\n      },\n    };\n  });\n\n  /*\n  const [springs, setSprings] = useSprings(items.length, index => ({\n    from: {\n      transform: items[index].transform,\n      opacity: 1,\n    },\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 220,\n    },\n  }));\n  */\n  /*\n  const { transform } = useSpring({\n    transform: `perspective(600px) rotateX(${open ? 180 : 0}deg)`,\n    config: { mass: 5, tension: 500, friction: 180 },\n  });\n*/\n  console.log(\"SPRINGS \", springs);\n  const refs = useRef([]);\n  const settingsRef = useRef([]);\n  const widgetSettings = useRef(\n    widgetConfigData.map((w, i) => {\n      return {\n        settings: w.widget.settings || [],\n        title: w.widget.title,\n        appId: w.widget.appID,\n        installCount: w.widget.installCount,\n        currentSettings: w.currentSettings,\n        image: w.widget.image,\n        dataConnectors: w.dataConnectors,\n      };\n    }),\n  );\n\n  const roleKeys = [\"\", \"work\", \"family\", \"hobbies\"];\n  const tabClick = (e, tab) => {\n    console.log(\"Click\", e);\n    console.log(\"TAB\", tab);\n    setActiveTab(tab);\n  };\n\n  useEffect(() => {\n    // browser cache images....\n    const promises = widgetConfigData.map(src => {\n      return new Promise(function (resolve, reject) {\n        const img = new Image();\n        img.src = src.widget.image;\n        img.onload = resolve(img);\n        img.onerror = reject();\n        imageCache.current.push(src.widget.image);\n      });\n    });\n    Promise.all(promises).then(cachedImages => {\n      console.log(\"Images loaded....\", cachedImages);\n      //imageCache.current = cachedImages;\n      //setImagesReady(true);\n    });\n  }, []);\n\n  const takeSnapshot = async w => {\n    const DEFAULT_PNG = {\n      fileName: \"component.png\",\n      type: \"image/png\",\n      html2CanvasOptions: {},\n    };\n    if (w !== -1) {\n      /*\n      const ww = document.querySelectorAll(\n        \"[data-widget-index='\" + w + \"']\",\n      )[0];\n\n      const element = ReactDOM.findDOMNode(ww);\n      const canvas = await html2canvas(element, {\n        scrollY: -window.scrollY,\n        useCORS: true,\n        //backgroundColor: null,\n        ...DEFAULT_PNG,\n      });\n      const f = canvas.toDataURL(DEFAULT_PNG.type, 1.0);\n      //console.log(\"FILE2 \", f);\n      console.log(\"NEW SNAPSHOT TAKEN...\");\n      */\n      //widgetImage.current = f;\n      //widgetImage.current = \"https://via.placeholder.com/400\";\n      //setOpen(true);\n      //setWidgetImage(f);\n    }\n  };\n  const openSettings = w => {\n    if (!open) {\n      console.log(\"CLICK...\", w);\n      //console.log(\"REFS...\", refs.current[0].getBoundingClientRect());\n      //const ww = refs.current[w].getBoundingClientRect();\n      //console.log(document.querySelectorAll(\"[data-widget-index='\" + w + \"']\"));\n\n      const ww = document\n        .querySelectorAll(\"[data-widget-index='\" + w + \"']\")[0]\n        .getBoundingClientRect();\n      // const element = ReactDOM.findDOMNode(refs.current[settings.widget]);\n      //const ww = { left: 0, top: 0, height: 0, width: 0 };\n      console.log(\"WW...\", ww);\n\n      settings.current = {\n        left: ww.left + \"px\",\n        top: ww.top + \"px\",\n        height: ww.height + \"px\",\n        width: ww.width + \"px\",\n        widget: w,\n      };\n      /*\n      animationItems.current = [\n        {\n          opacity: 1,\n          transform: `perspective(1000px) rotateX(${open ? 180 : 0}deg)`,\n          //transform: `perspective(1000px) rotateY(180deg)`,\n          height: ww.height + \"px\",\n          width: ww.width + \"px\",\n          visibility: \"visible\",\n          //reset: true,\n          config: {\n            mass: 5,\n            tension: 500,\n            friction: 220,\n          },\n        },\n        \n        {\n          delay: 500,\n          reset: true,\n          from: {\n            transform: \"none\",\n            width: ww.width + \"px\",\n            height: ww.height + \"px\",\n            visibility: \"hidden\",\n          },\n          to: {\n            transform: \"none\",\n            width: \"400px\",\n            height: \"400px\",\n            visibility: \"hidden\",\n          },\n        },\n        \n      ];\n*/\n      //setSprings(fn(animationItems.current));\n\n      //takeSnapshot(w);\n\n      setSprings(index => {\n        if (index === 0) {\n          return {\n            //transform: `perspective(1000px) rotateY(180deg)`, right-toleft\n\n            transform: `perspective(1000px) rotateY(150deg)`,\n            onRest: () => {\n              setFlipped(true);\n              setFinish(true);\n            },\n          };\n        }\n\n        return {\n          transform: null,\n\n          opacity: 0,\n          from: {\n            width: \"300px\",\n            height: \"300px\",\n          },\n          to: {\n            width: \"400px\",\n            height: \"400px\",\n          },\n          config: { ...SpringConfig.molasses, duration: 3500 },\n          onRest: () => {\n            //setFinish(true);\n          },\n        };\n      });\n\n      setOpen(true);\n    }\n  };\n\n  useEffect(() => {\n    let ignore = false;\n    console.log(\"OPEN CHANGE \", open);\n    if (false) {\n      //if (open) {\n      //console.log(\"REFS....\", document.querySelectorAll(\".prifina-widget[data-widget-index='0']\"));\n      //console.log(\"REFS....\", document.querySelectorAll(\".prifina-widget\"));\n      /*\n      animationItems.current = [\n        {\n          opacity: 1,\n          transform: `perspective(1000px) rotateY(180deg)`,\n          width: settings.current.width,\n          height: settings.current.height,\n          visibility: \"visible\",\n          config: { mass: 5, tension: 500, friction: 80 },\n          reset: true,\n          onStart: () => {\n            // hide widget...\n            //refs.current[settings.widget].style.visibility = \"hidden\";\n          },\n        },\n        {\n          delay: 500,\n          reset: true,\n          from: {\n            transform: \"none\",\n            width: settings.current.width,\n            height: settings.current.height,\n            visibility: \"visible\",\n          },\n          to: {\n            transform: \"none\",\n            width: \"400px\",\n            height: \"400px\",\n            visibility: \"visible\",\n          },\n          onStart: () => {\n            if (settingsRef.current[0]) {\n              //console.log(\"ENDS...\", settingsRef.current[0]);\n              setFlipped(true);\n              //settingsRef.current[0].style.display = \"none\";\n            }\n          },\n          onRest: () => {\n            if (settingsRef.current[1]) {\n              //console.log(\"ENDS...\", settingsRef.current[1]);\n              // settingsRef.current[0].style.visibility = \"hidden\";\n            }\n          },\n        },\n      ];\n*/\n      //setSprings(fn(animationItems.current));\n    } else {\n      if (settings.current.widget != -1) {\n        console.log(\"INIT SPRINGS....\");\n\n        settingsRef.current = [];\n        if (flipped && finish) {\n          setSprings(index => {\n            return {\n              from: {\n                transform: items[index].transform,\n                opacity: 1,\n                width: \"300px\",\n                height: \"300px\",\n              },\n              config: {\n                mass: 5,\n                tension: 500,\n                friction: 220,\n              },\n            };\n          });\n        }\n\n        setFlipped(false);\n        setFinish(false);\n      }\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [open]);\n\n  useEffect(() => {\n    registerClient([appSyncClient, GRAPHQL, Storage]);\n    /*\n    let data = installedWidgets.map(w => {\n      return {\n        url: widgetData[w].url,\n        settings: widgetData[w].settings.length > 0,\n        currentSetting: {},\n      };\n    });\n*/\n    console.log(\"WIDGET CONFIG \", widgetConfig);\n    /*\n    //await getSettings(appID, \"f902cbca-8748-437d-a7bb-bd2dc9d25be5\")\n    let allSettings = [];\n    getSettings(\"\", \"f902cbca-8748-437d-a7bb-bd2dc9d25be5\").then(res => {\n      //console.log(\"SETTINGS \", res);\n      const widgets = JSON.parse(res.data.getInstalledWidgets.installedWidgets);\n      console.log(\"INSTALLED \", widgets);\n      widgetSettings.current = widgetConfig.map((w, i) => {\n        let defaultValues = {};\n        if (w.settings) {\n          w.widget.settings.forEach(v => {\n            // if type=text...\n            defaultValues[v.value] = \"\";\n          });\n          if (widgets.hasOwnProperty(w.widget.appID)) {\n            //console.log(\"SEETINGS FOUND \", w.widget.appID);\n            widgets[w.widget.appID].forEach(w => {\n              if (defaultValues.hasOwnProperty(w.field)) {\n                defaultValues[w.field] = w.value;\n              }\n            });\n          }\n        }\n        widgetConfig[i].currentSetting = defaultValues;\n        return {\n          settings: w.widget.settings || [],\n          title: w.widget.title,\n          appId: w.widget.appID,\n          currentSetting: defaultValues,\n        };\n      });\n\n      console.log(\"WIDGET CONFIG 2\", widgetConfig);\n    });\n    */\n    /*\n    widgetSettings.current = widgetConfig.map((w, i) => {\n      let defaultValues = {};\n      console.log(\"WIDGET SETTINGS \", w);\n      if (w.settings) {\n        w.widget.settings.forEach(v => {\n          // if type=text...\n          defaultValues[v.value] = \"\";\n        });\n        allSettings.push(getSettings(w));\n      } else {\n        allSettings.push(Promise.resolve({}));\n      }\n\n      return {\n        settings: w.widget.settings || [],\n        title: w.widget.title,\n        appId: w.widget.appID,\n        currentSetting: defaultValues,\n      };\n    });\n    */\n    /*\n    Promise.all(allSettings).then(r => {\n      //console.log(\"GET SETTINGS \", r);\n      r.forEach((d, i) => {\n        //console.log(\"GET SETTINGS 2\", d);\n        let defaultValues = {};\n        if (Object.keys(d).length > 0) {\n          Object.keys(d).forEach(k => {\n            defaultValues[k] = d[k];\n          });\n          widgetConfig[i].currentSetting = defaultValues;\n          widgetSettings.current[i].currentSetting = defaultValues;\n        }\n      });\n      //console.log(\"WIDGET CONFIG \", data);\n      //setWidgetConfig(data);\n    });\n    */\n    /*\n    console.log(\"GET SETTINGS \", d);\n        if (Object.keys(d).length > 0) {\n          Object.keys(d).forEach(k => {\n            defaultValues[k] = d[k];\n          });\n        }\n        data[i].currentSetting = defaultValues;\n\n    console.log(\"WIDGET CONFIG \", data);\n    setWidgetConfig(data);\n    */\n  }, []);\n\n  useEffect(() => {\n    if (widgetConfig.length > 0) {\n      console.log(\"CREATE WIDGETS...\");\n      const widgets = widgetConfig.map((w, i) => {\n        console.log(\"WIDGET COMPONENT \", w);\n        //React.forwardRef((props, ref) =>\n\n        const Widget = forwardRef((props, ref) => {\n          console.log(\"W \", props);\n          return (\n            <React.Fragment>\n              <div\n                style={{\n                  width: w.widget.size.width + \"px\",\n                  height: w.widget.size.height + \"px\",\n                  margin: \"10px\",\n                }}\n              >\n                {/* \n                  <C.IconDiv open={props.open} onClick={() => openSettings(i)}>\n                    <BlendIcon iconify={bxCog} />\n                  </C.IconDiv>\n                  */}\n                {w.settings && (\n                  <C.IconDiv\n                    open={props.open}\n                    onClick={() => openSettings(i)}\n                    widgetTheme={w.widget.theme}\n                  />\n                )}\n                {!w.settings && <C.EmptyDiv />}\n\n                <C.WidgetWrapper\n                  className={\"prifina-widget\"}\n                  data-widget-index={i}\n                  key={\"widget-wrapper-\" + i}\n                  ref={ref}\n                >\n                  <RemoteComponent url={w.url} {...props} />\n                </C.WidgetWrapper>\n              </div>\n            </React.Fragment>\n          );\n        });\n\n        //const Widget = (props) => <RemoteComponent url={remoteUrl} {...props} />;\n\n        //return <Widget key={\"prifina-widget-\" + i} test={\"ok\"} />;\n        return Widget;\n      });\n      //refs.current = widgets;\n      // <RemoteComponent url={remoteUrl} fallback={<div>Testing...</div>} />;\n      console.log(\"WIDGETS \", widgets);\n\n      setWidgetList(widgets);\n    }\n  }, [widgetConfig]);\n\n  const onUpdate = data => {\n    console.log(\"Update settings \", data);\n    console.log(\"HOOK \", WidgetHooks);\n    //console.log(getCallbacks());\n    console.log(settings.current, widgetSettings);\n    let newSettings = JSON.parse(\n      JSON.stringify(widgetSettings.current[settings.current.widget].settings),\n    );\n    Object.keys(data).forEach(k => {\n      widgetSettings.current[settings.current.widget].currentSettings[k] =\n        data[k];\n    });\n    // update settings...\n    for (let s = 0; s < newSettings.length; s++) {\n      // only keep field+values\n      delete newSettings[s].label;\n      delete newSettings[s].type;\n\n      if (data.hasOwnProperty(newSettings[s].field)) {\n        newSettings[s].value = data[newSettings[s].field];\n      }\n    }\n    /*\n    Object.keys(data).forEach(k => {\n      widgetSettings.current[settings.current.widget].currentSetting[k] =\n        data[k];\n      newSettings.push({ field: k, value: data[k] });\n    });\n    */\n\n    const currentAppId = widgetSettings.current[settings.current.widget].appId;\n    //\"f902cbca-8748-437d-a7bb-bd2dc9d25be5\"\n    /*\n    input WidgetSettingInput {\n      field: String!\n      value: String!\n    }\n*/\n    console.log(\"NEW SETTINGS \", newSettings, currentAppId);\n    // useCallback((appID, uuid, settings = [{}])\n    setSettings(currentAppId, prifinaID, {\n      type: \"WIDGET\",\n      index: settings.current.widget,\n      settings: newSettings,\n    });\n    const c = getCallbacks();\n    console.log(\"CALLBACKS \", c);\n    const widgetInstallCount =\n      widgetSettings.current[settings.current.widget].installCount;\n    console.log(\n      \" CALLBACK \",\n      c.hasOwnProperty(currentAppId),\n      widgetInstallCount,\n    );\n    console.log(\" CALLBACK \", typeof c[currentAppId][widgetInstallCount]);\n    if (\n      c.hasOwnProperty(currentAppId) &&\n      typeof c[currentAppId][widgetInstallCount] === \"function\"\n    ) {\n      console.log(\"FOUND CALLBACK \");\n      c[currentAppId][widgetInstallCount]({ settings: data });\n    }\n    //setWidgetData([data]);\n    //setOpen(false);\n    //console.log(check());\n    /*\n    console.log(settings, widgetSettings[settings.current.widget]);\n    const currentSettings = widgetSettings[settings.current.widget];\n    console.log(prifina.getCallbacks());\n    const c = prifina.getCallbacks();\n    if (typeof c[currentSettings.appID] === \"function\") {\n      prifina.setSettings(currentSettings.appID, data);\n      c[currentSettings.appID](data);\n      setOpen(false);\n    }\n    */\n    setSprings(index => {\n      return {\n        from: {\n          transform: items[index].transform,\n          opacity: 1,\n          width: \"300px\",\n          height: \"300px\",\n        },\n        config: {\n          mass: 5,\n          tension: 500,\n          friction: 220,\n        },\n      };\n    });\n\n    setOpen(false);\n    setFlipped(false);\n    setFinish(false);\n  };\n\n  const saveSearchKey = async searchKey => {\n    if (searchKey.length > 0)\n      await appSyncClient.mutate({\n        mutation: gql(addSearchKey),\n        variables: {\n          input: {\n            owner: currentUser.uuid,\n            searchKey: searchKey,\n            role: activeTab === 0 ? \"\" : roleKey[activeTab],\n          },\n        },\n      });\n\n    /*\n      addSearchKeyMutation(GRAPHQL, {\n        owner: currentUser.uuid,\n        searchKey: searchKey,\n        role: activeTab === 0 ? \"\" : roleKey[activeTab],\n      });\n      */\n    /*\ninput SearchKeyInput {\n\towner: String!\n\tsearchKey: String\n\trole: String\n}\n*/\n  };\n  const saveSearchResult = async (searchKey, searchResult) => {\n    if (searchKey.length > 0) {\n      const searchBuckeyKey = \"search-results/\" + short.generate() + \".json\";\n\n      await appSyncClient.mutate({\n        mutation: gql(addSearchResult),\n        variables: {\n          input: {\n            owner: currentUser.uuid,\n            searchKey: searchKey,\n            role: activeTab === 0 ? \"\" : roleKey[activeTab],\n            selectedResult: searchBuckeyKey,\n          },\n        },\n      });\n\n      /*\n      addSearchResultMutation(GRAPHQL, {\n        owner: currentUser.uuid,\n        searchKey: searchKey,\n        role: activeTab === 0 ? \"\" : roleKey[activeTab],\n        selectedResult: searchBuckeyKey,\n      });\n      */\n      await Storage.put(searchBuckeyKey, JSON.stringify(searchResult), {\n        level: \"public\",\n        contentType: \"application/json\",\n\n        metadata: {\n          owner: currentUser.uuid,\n          searchKey: searchKey,\n          created: new Date().toISOString(),\n        },\n      });\n    }\n\n    /*\n\ninput SearchResultInput {\n\towner: String!\n\tsearchKey: String!\n\tselectedResult: AWSJSON\n}\n\n*/\n  };\n  /*\n  useEffect(() => {\n    if (widgetList.length > 0) {\n      const widgets = document.querySelectorAll(\n        \".prifina-widget >*:first-child\",\n      );\n      console.log(widgets);\n      widgets.forEach((w, i) => {\n        console.log(w.getBoundingClientRect());\n      });\n    }\n  }, [widgetList]);\n*/\n  return (\n    <>\n      {open && (\n        <C.ModalBackground\n          className={\"widget-modal\"}\n          onClick={e => {\n            console.log(\"TARGET \", e);\n            console.log(\"WIDGET SETTINGS \", refs.current, settings);\n            console.log(\"MODAL \", e.target.className);\n\n            if (e.target.className.indexOf(\"widget-modal\") > -1) {\n              setOpen(false);\n            }\n          }}\n        >\n          {springs.map((props, i) => {\n            console.log(\"PROPS \", i, props);\n            console.log(\"IMAGE \", imageCache.current);\n            // widget settings...\n            console.log(settings.current);\n            console.log(widgetSettings);\n\n            return (\n              <animated.div\n                style={{\n                  transform: props.transform,\n                  /*opacity: props.opacity, */\n                  left: settings.current.left,\n                  top: settings.current.top,\n\n                  width: props.width,\n                  height: props.height,\n\n                  position: \"absolute\",\n\n                  /*border: i === 0 ? \"2px outset\" : null,*/\n                  borderRadius: i === 0 ? \"8px\" : null,\n                  visibility: open ? \"visible\" : \"hidden\",\n                  /*\n                  visible: props.transform.interpolate(\n                    [0, 150],\n                    [\"visible\", \"hidden\"],\n                  ),\n                  */\n                  zIndex: 50,\n                  backgroundSize: \"cover\",\n                  /*backgroundColor: flipped ? \"white\" : null,*/\n                  backgroundImage:\n                    i > 0\n                      ? null\n                      : flipped\n                      ? null\n                      : `url(${imageCache.current[settings.current.widget]})`,\n                }}\n                ref={ref => {\n                  if (ref !== null) settingsRef.current.push(ref);\n                }}\n                key={\"animated-\" + i}\n              >\n                {finish && i === 1 && (\n                  <C.SettingsDiv>\n                    <C.SettingsDialog\n                      spring={i}\n                      flipped={flipped}\n                      open={open}\n                      onUpdate={onUpdate}\n                      widgetIndex={settings.current.widget}\n                      widgetSettings={\n                        widgetSettings.current[settings.current.widget]\n                      }\n                    />\n                  </C.SettingsDiv>\n                )}\n              </animated.div>\n            );\n          })}\n        </C.ModalBackground>\n      )}\n\n      <PrifinaLogo title={\"Display App\"} />\n      <C.PageContainer>\n        <div style={{ overflow: \"hidden\" }}>\n          <Tabs\n            activeTab={activeTab}\n            onClick={tabClick}\n            style={{ height: \"100%\" }}\n            variant={\"line\"}\n          >\n            <TabList>\n              <Tab>\n                <C.TabText>{currentUser.name}</C.TabText>\n              </Tab>\n              <Tab>\n                <C.TabText>Work</C.TabText>\n              </Tab>\n              <Tab>\n                <C.TabText>Family</C.TabText>\n              </Tab>\n              <Tab>\n                <C.TabText>Hobbies</C.TabText>\n              </Tab>\n            </TabList>\n            <TabPanelList style={{ backgroundColor: null }}>\n              <TabPanel\n                style={{\n                  height: \"100vh\",\n                  paddingBottom: \"50px\",\n                  overflow: \"auto\",\n                }}\n              >\n                {/* \n              <div style={{ overflow: \"hidden\" }}>\n                <C.SearchBox\n                  ref={searchBox}\n                  showHistory={setSearchHistory}\n                  chevronOpen={searchHistory}\n                  searchKey={setSearchKey}\n                  searchOpen={searchKey.length > 0}\n                  saveSearchKey={saveSearchKey}\n                />\n                {searchKey.length > 0 && !searchHistory && (\n                  <C.SearchResults\n                    searchBox={searchBox}\n                    searchKey={searchKey}\n                    roleKey={roleKeys[activeTab]}\n                    saveSearchResult={saveSearchResult}\n                  />\n                )}\n                {searchHistory && <C.SearchHistory searchBox={searchBox} />}\n              </div>\n*/}\n                <div style={{ overflow: \"auto\" }}>\n                  <C.WidgetContainer className={\"prifina-widget-container\"}>\n                    {widgetList.length > 0 && (\n                      <C.WidgetList\n                        widgetList={widgetList}\n                        widgetData={widgetConfig}\n                        currentUser={currentUser}\n                        dataSources={dataSources}\n                      />\n                    )}\n                  </C.WidgetContainer>\n                </div>\n              </TabPanel>\n              <TabPanel>Work panel</TabPanel>\n              <TabPanel>Family panel</TabPanel>\n              <TabPanel>Hobbies panel</TabPanel>\n            </TabPanelList>\n          </Tabs>\n        </div>\n      </C.PageContainer>\n    </>\n  );\n};\n\nDisplayApp.propTypes = {\n  widgetConfigData: PropTypes.array.isRequired,\n  appSyncClient: PropTypes.object.isRequired,\n  prifinaID: PropTypes.string.isRequired,\n  open: PropTypes.bool,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  visibility: PropTypes.string,\n  transform: PropTypes.string,\n};\nexport default DisplayApp;\n"],"sourceRoot":""}