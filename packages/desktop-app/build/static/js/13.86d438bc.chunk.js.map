{"version":3,"sources":["pages/display-app/components.js"],"names":["i18n","init","TabText","styled","Text","PageContainer","div","WidgetWrapper","IconDiv","props","open","widgetTheme","EmptyDiv","WidgetContainer","Flex","ModalBackground","SearchContainer","width","left","top","SettingsDiv","BlurImageDiv","DotsContainer","colors","keyframes","Dot","DotLoader","theme","useTheme","console","log","WidgetList","React","memo","widgetList","widgetData","currentUser","dataSources","userDataConnectors","Object","keys","dataConnectors","map","Widget","i","widgetDataSource","length","userDataSourceStatus","indexOf","status","dataSourceType","sourceType","style","widget","size","height","margin","backgroundImage","image","bottom","padding","position","textAlign","textStyle","color","title","shortDescription","paddingLeft","display","justifyContent","zIndex","data","settings","currentSettings","SettingsDialog","widgetIndex","widgetSettings","onUpdate","inputFields","useRef","timezones","inputRef","useState","fieldInit","setFieldInit","useEffect","forEach","f","current","fieldTypeCheck","s","type","push","moment","tz","names","timezone","text","format","offset","utcOffset","useFormFields","fields","handleChange","tzOffset","value","target","id","m","mt","ml","mr","setting","Fragment","placeholder","label","mb","field","name","defaultValue","onChange","ref","t","ii","onClick","e","hasOwnProperty","SearchBox","forwardRef","showHistory","chevronOpen","searchKey","searchOpen","saveSearchKey","search","searchRef","LeftIcon","iconify","bxSearchAlt2","InputField","autoFocus","__","onKeyDown","key","prevState","RightIcon","bxChevronUp","bxChevronDown","SearchResults","searchBox","roleKey","saveSearchResult","boxRect","getBoundingClientRect","containerProps","content","setContent","useFetch","error","isLoading","setUrl","GOOGLE_URL","SEARCH_ENGINE","encodeURIComponent","API_KEY","items","item","href","link","itemIndex","parseInt","currentTarget","dataset","fontSize","snippet","SearchHistory","searchHistory"],"mappings":"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","file":"static/js/13.86d438bc.chunk.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\n\nimport React, { useRef, forwardRef, useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport {\n  Box,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Divider,\n  IconField,\n  Label,\n  Select,\n} from \"@blend-ui/core\";\n//import { useFormFields } from \"../../lib/formFields\";\nimport bxSearchAlt2 from \"@iconify/icons-bx/bx-search-alt-2\";\nimport bxChevronUp from \"@iconify/icons-bx/bx-chevron-up\";\nimport bxChevronDown from \"@iconify/icons-bx/bx-chevron-down\";\n\n//import useFetch from \"../../lib/hooks/useFetch\";\nimport { API_KEY, GOOGLE_URL, SEARCH_ENGINE } from \"../../config\";\n\n//import i18n from \"../../lib/i18n\";\nimport { i18n, useFetch, useFormFields } from \"@prifina-apps/utils\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport PropTypes from \"prop-types\";\n\nimport { useTheme } from \"@blend-ui/core\";\n\ni18n.init();\n\n/*\nposition: absolute;\nwidth: 1309px;\nheight: 716px;\nleft: 64px;\ntop: 182px;\n\nbackground: #FFFFFF;\nbox-shadow: 0px -4px 8px #F5F6F6;\n*/\nexport const TabText = styled(Text)`\n  padding-left: 20px;\n  padding-top: 25px;\n`;\n\nexport const PageContainer = styled.div`\n  margin-left: 64px;\n  margin-right: 64px;\n  margin-top: 24px;\n\n  background: #ffffff;\n  box-shadow: 0px -4px 8px #f5f6f6;\n`;\n\nexport const WidgetWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 2px outset;\n  border-radius: 8px;\n  /*\n  margin: 10px;\n  min-height: 200px;\n  min-width: 200px;\n  */\n`;\n/*\ndiv {\n  width: 100px;\n  height: 100px;\n  background-image: radial-gradient(circle, black 10px, transparent 11px);\n  background-size: 100% 33.33%;\n}\n{\n    height: 20px;\n    width: 30px;\n    position: relative;\n    left: 188px;\n    top: 41px;\n    opacity: 1;\n    cursor: pointer;\n    background-image: radial-gradient(circle,black 2px,transparent 0px);\n    background-size: 100% 33.33%;\n}\n*/\n/*\nexport const IconDiv = styled.div`\n  height: 24px;\n  position: relative;\n  left: 197px;\n  top: 23px;\n  opacity: 0;\n  cursor: ${props => (props.open ? \"default\" : \"pointer\")};\n  &:hover {\n    opacity: ${props => (props.open ? 0 : 1)};\n  }\n`;\n*/\n\nexport const IconDiv = styled.div`\n  &:hover {\n    transform: scale(0.9);\n    box-shadow: 3px 2px 30px 1px rgb(0 0 0 / 24%);\n  }\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  left: 275px;\n  top: 20px;\n  opacity: 1;\n  cursor: ${props => (props.open ? \"default\" : \"pointer\")};\n  background-image: radial-gradient(\n    circle,\n    ${props => (props.widgetTheme === \"dark\" ? \"white\" : \"black\")} 2px,\n    transparent 0px\n  );\n  background-size: 100% 33.33%;\n  z-index: 10;\n`;\n\nexport const EmptyDiv = styled.div`\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  left: 180px;\n  top: 20px;\n  opacity: 1;\n`;\nexport const WidgetContainer = styled(Flex)`\n  /*\nwidth: 100%;\nheight: 100vh;\ndisplay: flex;\n*/\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-content: flex-start;\n  justify-content: flex-start;\n  position: relative;\n  top: 0px;\n  left: 0px;\n  overflow-y: auto;\n`;\nexport const ModalBackground = styled.div`\n  width: 100%;\n  height: 100vh;\n  z-index: 40;\n  background-color: rgba(30, 29, 29, 0.3);\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n/*\nexport const SearchModal = styled.div`\nwidth: 100%;\nheight: 100vh;\nz-index: 15;\nbackground-color: rgba(30, 29, 29, 0.3);\nposition: absolute;\nleft: 0;\ntop: 0;\n`;\n*/\nexport const SearchContainer = styled.div`\n  width: ${props => props.width}px;\n  /* height: 100vh; */\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: 20;\n  background-color: white;\n  position: absolute;\n  left: ${props => props.left}px;\n  top: ${props => props.top}px;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\nexport const SettingsDiv = styled.div`\n  background-color: white;\n  width: 100%;\n  height: 100%;\n  /*border: 2px outset; */\n  border-radius: 8px;\n  z-index: 50;\n`;\n\n/*\n.bg-image {\n  \n  background-image: url(\"photographer.jpg\");\n\n  filter: blur(8px);\n  -webkit-filter: blur(8px);\n\n  height: 100%;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n*/\nexport const BlurImageDiv = styled.div`\n  filter: blur(4px);\n  -webkit-filter: blur(4px);\n\n  height: 100%;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nconst dots = colors => keyframes`\n{\n  10% {\n   background-color: ${colors[0]}; \n  }\n  0%, 20%,100% {\n    background-color: ${colors[1]};\n  }\n}\n`;\n\nconst DotsContainer = styled.div`\n  color: ${props => (props.widgetTheme === \"dark\" ? \"white\" : \"black\")};\n  position: absolute;\n  top: 110px;\n  height: 69px;\n  width: 69px;\n  margin: 0 10px 0 0;\n  text-align: left;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 5px solid\n    ${props => (props.widgetTheme === \"dark\" ? \"white\" : \"black\")};\n  border-radius: 50%;\n  z-index: 20;\n  div {\n    animation: ${props =>\n        dots(\n          props.widgetTheme === \"dark\" ? [\"white\", \"gray\"] : [\"black\", \"gray\"],\n        )}\n      4s linear infinite;\n  }\n  div:nth-child(1) {\n    animation-delay: 1s;\n  }\n\n  div:nth-child(2) {\n    animation-delay: 2s;\n  }\n  div:nth-child(3) {\n    animation-delay: 3s;\n  }\n`;\n\nconst Dot = styled.div`\n  position: relative;\n\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${props =>\n    props.widgetTheme === \"dark\" ? \"white\" : \"black\"}\n\n  float: left;\n  z-index: 21;\n  margin-right: 9px;\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\nconst DotLoader = props => {\n  const theme = useTheme();\n  console.log(theme.colors);\n  return (\n    <DotsContainer theme={theme} {...props}>\n      <Dot theme={theme} {...props} />\n      <Dot theme={theme} {...props} />\n      <Dot theme={theme} {...props} />\n    </DotsContainer>\n  );\n};\n\nexport const WidgetList = React.memo(\n  ({ widgetList, widgetData, currentUser, dataSources }) => {\n    // currentUser\n    // localization\n    // settings\n    console.log(\"WIDGET LIST \", widgetList);\n    console.log(\"WIDGET DATA\", widgetData);\n    console.log(\"WIDGET USER\", currentUser);\n    console.log(\"DATASOURCES\", dataSources);\n    const userDataConnectors = Object.keys(currentUser.dataConnectors);\n    //const dataSources = { \"@prifina/google-timeline\": { sourceType: 2 } };\n    return (\n      <>\n        {widgetList.map((Widget, i) => {\n          // only first datasource is used ????\n          const widgetDataSource = widgetData[i].dataConnectors[0];\n\n          if (widgetData[i].dataConnectors.length > 0) {\n            // data source is not connected....\n            let userDataSourceStatus = 0;\n            if (\n              userDataConnectors.length > 0 &&\n              userDataConnectors.indexOf(widgetDataSource) > -1\n            ) {\n              // check dataSource status\n              userDataSourceStatus =\n                currentUser.dataConnectors[widgetDataSource].status;\n            }\n\n            const dataSourceType = dataSources[widgetDataSource].sourceType;\n            console.log(\"DATASOURCE TYPE\", i, widgetDataSource, dataSourceType);\n            if (userDataSourceStatus < 2) {\n              return (\n                <div\n                  key={\"widget-processing-\" + i}\n                  style={{\n                    width: widgetData[i].widget.size.width + \"px\",\n                    height: widgetData[i].widget.size.height + \"px\",\n                    margin: \"10px\",\n                  }}\n                >\n                  <EmptyDiv />\n                  <WidgetWrapper key={\"widget-wrapper-\" + i}>\n                    <BlurImageDiv\n                      key={\"prifina-widget-\" + i}\n                      style={{\n                        backgroundImage: `url(${widgetData[i].widget.image})`,\n                      }}\n                    />\n\n                    <div\n                      style={{\n                        width: widgetData[i].widget.size.width + \"px\",\n                        bottom: \"60px\",\n                        padding: \"10px\",\n                        position: \"absolute\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <Text\n                        textStyle={\"h6\"}\n                        color={\n                          widgetData[i].widget.theme === \"dark\"\n                            ? \"white\"\n                            : \"black\"\n                        }\n                      >\n                        {widgetData[i].widget.title}\n                      </Text>\n                      <Text\n                        textStyle={\"caption\"}\n                        color={\n                          widgetData[i].widget.theme === \"dark\"\n                            ? \"white\"\n                            : \"black\"\n                        }\n                      >\n                        {widgetData[i].widget.shortDescription}\n                      </Text>\n                    </div>\n                    <div\n                      style={{\n                        width: widgetData[i].widget.size.width + \"px\",\n                        bottom: \"15px\",\n                        paddingLeft: \"10px\",\n                        position: \"absolute\",\n                      }}\n                    >\n                      {userDataSourceStatus === 0 && (\n                        <Button>\n                          {dataSourceType === 1 ? \"Connect Data\" : \"Import\"}\n                        </Button>\n                      )}\n                      {userDataSourceStatus === 1 && <Button>Activate</Button>}\n                    </div>\n                  </WidgetWrapper>\n                </div>\n              );\n            }\n\n            // processing\n            if (userDataSourceStatus === 2) {\n              return (\n                <div\n                  key={\"widget-processing-\" + i}\n                  style={{\n                    width: widgetData[i].widget.size.width + \"px\",\n                    height: widgetData[i].widget.size.height + \"px\",\n                    margin: \"10px\",\n                  }}\n                >\n                  <EmptyDiv />\n                  <WidgetWrapper key={\"widget-wrapper-\" + i}>\n                    <BlurImageDiv\n                      key={\"prifina-widget-\" + i}\n                      style={{\n                        backgroundImage: `url(${widgetData[i].widget.image})`,\n                      }}\n                    />\n                    <div\n                      key={\"widget-dot-\" + i}\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        top: \"0px\",\n                        zIndex: 19,\n                      }}\n                    >\n                      <DotLoader widgetTheme={widgetData[i].widget.theme} />\n                      <div\n                        style={{\n                          width: widgetData[i].widget.size.width + \"px\",\n                          bottom: \"70px\",\n                          padding: \"5px\",\n                          position: \"absolute\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <Text\n                          textStyle={\"h6\"}\n                          color={\n                            widgetData[i].widget.theme === \"dark\"\n                              ? \"white\"\n                              : \"black\"\n                          }\n                        >\n                          Prosessing your data...\n                        </Text>\n                        <Text\n                          textStyle={\"caption\"}\n                          color={\n                            widgetData[i].widget.theme === \"dark\"\n                              ? \"white\"\n                              : \"black\"\n                          }\n                        >\n                          You will be notified as soon as the data becomes\n                          available in your cloud.\n                        </Text>\n                      </div>\n                    </div>\n                  </WidgetWrapper>\n                </div>\n              );\n            }\n          }\n          return (\n            <Widget\n              data={{\n                settings: widgetData[i].currentSettings,\n                currentUser: currentUser,\n              }}\n              key={\"prifina-widget-\" + i}\n            />\n          );\n        })}\n      </>\n    );\n  },\n);\n\nWidgetList.propTypes = {\n  widgetList: PropTypes.array.isRequired,\n  widgetData: PropTypes.array.isRequired,\n  currentUser: PropTypes.object,\n};\n\n//moment.tz.guess()\n//console.log(\"MOMENT \", moment.tz.names());\n/*\n  var select = document.getElementById('timezones');\nmoment.tz.names().forEach(function(timezone){\n\tvar option = document.createElement('option');\n  option.textContent = timezone + ': ' + moment.tz(timezone).format('Z');\n  select.appendChild(option);\n});\n*/\n/*\nmoment.tz.names().forEach(function (timezone) {\n  //console.log(moment.tz(timezone).utcOffset());\n});\n*/\n//console.log(moment.tz.names());\n/*\n<Label htmlFor=\"cabinClass\">Cabin Class</Label>\n<Select\n  id=\"cabinClass\"\n  name=\"cabinClass\"\n  defaultValue=\"Premium Economy\"\n  onChange={changeAction}\n>\n  <option>Economy</option>\n  <option>Premium Economy</option>\n  <option>Business</option>\n  <option>First Class</option>\n  <option>\n    With a super long label that doesn't get clobbered by the chevron\n  </option>\n</Select>\n*/\n\nexport const SettingsDialog = ({\n  widgetIndex,\n  widgetSettings,\n  onUpdate,\n  ...props\n}) => {\n  //const currentSettings = widgetSettings[widget];\n  console.log(\"SETTINGS \", widgetIndex, widgetSettings);\n  let inputFields = useRef({});\n  let timezones = useRef([]);\n  const inputRef = useRef();\n  const [fieldInit, setFieldInit] = useState(false);\n  useEffect(() => {\n    Object.keys(widgetSettings.currentSettings).forEach(f => {\n      inputFields.current[f] = widgetSettings.currentSettings[f];\n    });\n    console.log(\"FLDS \", inputFields);\n    console.log(\"DIALOG \", props);\n    let fieldTypeCheck = [];\n    widgetSettings.settings.forEach(s => {\n      console.log(s);\n      if (fieldTypeCheck.indexOf(s.type) === -1) fieldTypeCheck.push(s.type);\n    });\n    //console.log(fieldTypeCheck);\n\n    // have timezone field type...\n    if (fieldTypeCheck.indexOf(\"TZ\") > -1) {\n      moment.tz.names().forEach(function (timezone) {\n        timezones.current.push({\n          text: timezone + \": \" + moment.tz(timezone).format(\"Z\"),\n          tz: timezone,\n          offset: moment.tz(timezone).utcOffset(),\n        });\n      });\n    }\n    setFieldInit(true);\n  }, []);\n  //console.log(timezones);\n\n  const [fields, handleChange] = useFormFields(inputFields.current);\n\n  console.log(\"RENDER FIELDS \", fields, inputFields);\n\n  if (timezones.current.length > 0) {\n    const tzOffset = moment.tz(fields.tz).utcOffset();\n    console.log(\"TZ \", inputFields, tzOffset);\n    if (tzOffset !== inputFields.current.offset) {\n      inputFields.current.offset = tzOffset;\n      inputFields.current.tz = fields.tz;\n      console.log(\"INPUT \", inputRef);\n      if (inputRef.current) {\n        inputRef.current.value = tzOffset;\n      }\n\n      handleChange({\n        target: {\n          id: \"offset\",\n          value: tzOffset,\n        },\n      });\n    }\n  }\n\n  return (\n    <Box m={2}>\n      <Text textStyle={\"h3\"} textAlign={\"center\"} mt={10}>\n        {widgetSettings.title}\n      </Text>\n      <Divider />\n      {fieldInit && (\n        <Box mt={10} ml={5} mr={5}>\n          {widgetSettings.settings.map((setting, i) => {\n            return (\n              <React.Fragment key={\"settings-\" + i}>\n                {setting.type === \"text\" && (\n                  <Input\n                    mt={15}\n                    key={\"widget-setting-\" + i}\n                    placeholder={setting.label}\n                    mb={2}\n                    id={setting.field}\n                    name={setting.field}\n                    defaultValue={fields[setting.field]}\n                    onChange={handleChange}\n                    ref={inputRef}\n                  />\n                )}\n                {setting.type === \"TZ\" && (\n                  <>\n                    <Label key={\"setting-label-\" + i} mt={10}>\n                      {setting.label}\n                    </Label>\n                    <Select\n                      mb={10}\n                      size={\"sm\"}\n                      key={\"widget-setting-\" + i}\n                      id={setting.field}\n                      name={setting.field}\n                      defaultValue={fields[setting.value]}\n                      onChange={handleChange}\n                    >\n                      {timezones.current.map((t, ii) => {\n                        return (\n                          <option\n                            key={\"widget-setting-\" + i + \"-\" + ii}\n                            value={t.tz}\n                          >\n                            {t.text}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n          <Box mt={10}>\n            <Button\n              width={\"100%\"}\n              onClick={e => {\n                console.log(\"UPDATE BUTTON \", fields);\n                //console.log(fields);\n                if (timezones.length > 0 && fields.hasOwnProperty(\"tz\")) {\n                  onUpdate({\n                    tz: fields.tz,\n                    offset: moment.tz(fields.tz).utcOffset(),\n                  });\n                } else {\n                  onUpdate(fields);\n                }\n                //console.log(\"UPDATE CLICK \", e.target.className);\n                //onUpdate(fields);\n              }}\n            >\n              Update\n            </Button>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nSettingsDialog.propTypes = {\n  widgetIndex: PropTypes.number.isRequired,\n  widgetSettings: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport const SearchBox = forwardRef(\n  ({ showHistory, chevronOpen, searchKey, searchOpen, saveSearchKey }, ref) => {\n    const [fields, handleChange] = useFormFields({\n      search: \"\",\n    });\n    const searchRef = useRef();\n    return (\n      <Box ml={10} mr={10} ref={ref}>\n        <IconField>\n          <IconField.LeftIcon\n            iconify={bxSearchAlt2}\n            color={\"componentPrimary\"}\n            size={\"17\"}\n          />\n          <IconField.InputField\n            ref={searchRef}\n            autoFocus={true}\n            placeholder={i18n.__(\"Search\")}\n            id={\"search\"}\n            name={\"search\"}\n            onChange={handleChange}\n            onKeyDown={e => {\n              if (e.key === \"Enter\") {\n                //console.log(\"SEARCH ....\", fields.search);\n                saveSearchKey(fields.search);\n                searchKey(fields.search);\n              }\n            }}\n          />\n          <Box\n            display={\"inline-flex\"}\n            onClick={() => {\n              if (!searchOpen) {\n                showHistory(prevState => !prevState);\n              }\n              searchRef.current.value = \"\";\n              searchKey(\"\");\n            }}\n          >\n            <IconField.RightIcon\n              iconify={chevronOpen || searchOpen ? bxChevronUp : bxChevronDown}\n              color={\"componentPrimary\"}\n              size={\"17\"}\n            />\n          </Box>\n        </IconField>\n      </Box>\n    );\n  },\n);\nSearchBox.propTypes = {\n  showHistory: PropTypes.func.isRequired,\n  chevronOpen: PropTypes.bool.isRequired,\n  searchKey: PropTypes.func.isRequired,\n  searchOpen: PropTypes.bool,\n  saveSearchKey: PropTypes.func.isRequired,\n};\n\nexport const SearchResults = props => {\n  const { searchBox, searchKey, roleKey, saveSearchResult } = props;\n  //console.log(searchBox);\n  //console.log(searchBox.current.getBoundingClientRect());\n  const boxRect = searchBox.current.getBoundingClientRect();\n  const containerProps = {\n    width: boxRect.width,\n    left: boxRect.left,\n    top: boxRect.top + boxRect.height + 5,\n  };\n  console.log(containerProps);\n\n  console.log(\"NEW SEARCH \", searchKey);\n  const [content, setContent] = useState(null);\n  const { data, error, isLoading, setUrl } = useFetch();\n  /*\n  setUrl(\n    `${GOOGLE_URL}?cx=${SEARCH_ENGINE}&exactTerms=${\n      roleKey.length > 0 ? encodeURIComponent(roleKey) : \"\"\n    }&q=${encodeURIComponent(searchKey)}&lr=lang_en&key=${API_KEY}`,\n  );\n*/\n  //let searchHistory = [];\n  /*\n  let searchHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n  if (searchHistory === null) {\n    searchHistory = [];\n  } else {\n    searchHistory.unshift({ search: searchKey });\n  }\n  localStorage.setItem(\"searchHistory\", JSON.stringify(searchHistory));\n*/\n  useEffect(() => {\n    if (!isLoading)\n      setUrl(\n        `${GOOGLE_URL}?cx=${SEARCH_ENGINE}&exactTerms=${\n          roleKey.length > 0 ? encodeURIComponent(roleKey) : \"\"\n        }&q=${encodeURIComponent(searchKey)}&lr=lang_en&key=${API_KEY}`,\n      );\n    if (error) setContent(<h2>Error when fetching: {error}</h2>);\n    if (!data && isLoading) setContent(<h2>LOADING...</h2>);\n    if (!data && !isLoading) setContent(null);\n    if (data) {\n      //console.log(Object.keys(data));\n      console.log(data);\n      const items = data.items.map((item, i) => {\n        return (\n          <li key={\"search-result-\" + i}>\n            <div>\n              <a\n                href={item.link}\n                data-link={i}\n                onClick={e => {\n                  const itemIndex = parseInt(e.currentTarget.dataset[\"link\"]);\n                  console.log(\"LINK CLICK \", data.items[itemIndex]);\n                  saveSearchResult(searchKey, data.items[itemIndex]);\n                }}\n                target={\"_blank\"}\n              >\n                {item.title}\n              </a>\n            </div>\n            <div style={{ fontSize: \"0.75rem\" }}>{item.snippet}</div>\n          </li>\n        );\n      });\n      setContent(<ol>{items}</ol>);\n    }\n  }, [searchKey, error, isLoading, data]);\n  /*\n  const getContent = newSearch => {\n    if (error) return <h2>Error when fetching: {error}</h2>;\n    if (!data && isLoading) return <h2>LOADING...</h2>;\n    if (!data) return null;\n    console.log(Object.keys(data));\n    console.log(data);\n    console.log(\"NEW SEARCH2 \", searchKey);\n    console.log(\"NEW SEARCH3 \", newSearch);\n    console.log(\"NEW SEARCH4 \", prevSearchKey);\n\n    prevSearchKey.current = newSearch;\n    return (\n      <ol>\n        {data.items.map((item, i) => {\n          return (\n            <li key={\"search-result-\" + i}>\n              <div>\n                <a href={item.link} target={\"_blank\"}>\n                  {item.title}\n                </a>\n              </div>\n              <div style={{ fontSize: \"0.75rem\" }}>{item.snippet}</div>\n            </li>\n          );\n        })}\n      </ol>\n    );\n  };\n*/\n\n  return (\n    <>\n      <SearchContainer {...containerProps}>\n        <Text textStyle={\"h4\"}>Search results</Text>\n        <Divider />\n        {content}\n      </SearchContainer>\n    </>\n  );\n};\nSearchResults.propTypes = {\n  searchBox: PropTypes.object.isRequired,\n  searchKey: PropTypes.string,\n  roleKey: PropTypes.string,\n  saveSearchResult: PropTypes.func.isRequired,\n};\n\nexport const SearchHistory = props => {\n  const { searchBox } = props;\n  console.log(\"HISTORY \", searchBox);\n  //console.log(searchBox.current.getBoundingClientRect());\n  const boxRect = searchBox.current.getBoundingClientRect();\n  const containerProps = {\n    width: boxRect.width,\n    left: boxRect.left,\n    top: boxRect.top + boxRect.height + 5,\n  };\n  console.log(containerProps);\n  let searchHistory = [];\n  /*\n  let searchHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n  if (searchHistory === null) {\n    searchHistory = [{ search: \"Testing...\" }];\n  }\n*/\n  /*\n    localStorage.setItem(\n      \"WidgetImage\",\n      JSON.stringify({ image: res.target.result })\n    );\n    */\n\n  return (\n    <>\n      <SearchContainer {...containerProps}>\n        <Text textStyle={\"h4\"}>Search history</Text>\n        <Divider />\n        <ol>\n          {searchHistory.length > 0 &&\n            searchHistory.map((item, i) => {\n              return <li key={\"search-\" + i}>{item.search}</li>;\n            })}\n        </ol>\n      </SearchContainer>\n    </>\n  );\n};\n\nSearchHistory.propTypes = {\n  searchBox: PropTypes.object.isRequired,\n};\n"],"sourceRoot":""}