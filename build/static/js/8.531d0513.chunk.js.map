{"version":3,"sources":["assets/mobile-background.png","pages/MobileLogin.js"],"names":["i18n","init","MobileLogin","props","alerts","useToast","useFormFields","username","password","loginFields","handleChange","useState","status","msg","usernameError","setUsernameError","passwordError","setPasswordError","useFocus","inputUsername","setInputUsernameFocus","inputPassword","setInputPasswordFocus","loginStep","setLoginStep","checkUsername","console","log","userMsg","length","__","userState","validUsername","config","usernameLength","check","some","alert","message","error","checkPassword","onBlur","checkResult","passwordLength","lowerCaseChars","upperCaseChars","digitChars","hasNonChars","hasSpaces","stepTitle","stepProgress","Fragment","textAlign","pt","pb","height","src","Background","ProgressContainer","title","progress","mobileApp","ml","mr","textStyle","as","m","mt","width","LeftIcon","iconify","bxKey","color","size","InputField","placeholder","id","name","display","variation","onClick","bxUser","autoFocus","ref","onChange","onKeyDown","e","key","target","value","preventDefault","justifyContent","style","position","top","fontSize","PasswordField","errorMsg","pl","pr","wordBreak"],"mappings":"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","file":"static/js/8.531d0513.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mobile-background.d0a7cbfa.png\";","import React, { useState } from \"react\";\nimport { Box, Flex, Button, Text, Image, IconField } from \"@blend-ui/core\";\nimport { StyledBox } from \"../components/DefaultBackground\";\nimport Background from \"../assets/mobile-background.png\";\n\nimport { ReactComponent as PrifinaText } from \"../assets/prifina-text.svg\";\n\nimport ProgressContainer from \"../components/ProgressContainer\";\n\nimport i18n from \"../lib/i18n\";\n\nimport bxUser from \"@iconify/icons-bx/bx-user\";\nimport bxKey from \"@iconify/icons-bx/bx-key\";\nimport PasswordField from \"../components/PasswordField\";\n\nimport Amplify, { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormFields } from \"../lib/formFields\";\nimport { useFocus } from \"../lib/componentUtils\";\nimport { useToast } from \"@blend-ui/toast\";\n\nimport {\n  validUsername,\n  lowerCaseChars,\n  upperCaseChars,\n  hasSpaces,\n  hasNonChars,\n  digitChars,\n} from \"../lib/utils\";\n\nimport config from \"../config\";\n\ni18n.init();\n\nconst titleText =\n  \"We are a team working on the future of personal applications. This is why we have created this personal cloud environment that will help you implement your boldest ideas while allowing individuals to keep their data.\";\n\nconst MobileLogin = (props) => {\n  const alerts = useToast();\n  const [loginFields, handleChange] = useFormFields({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [usernameError, setUsernameError] = useState({\n    status: false,\n    msg: \"Error message\",\n  });\n  const [passwordError, setPasswordError] = useState({\n    status: false,\n    msg: \"Error message\",\n  });\n  const [inputUsername, setInputUsernameFocus] = useFocus();\n  const [inputPassword, setInputPasswordFocus] = useFocus();\n\n  const [loginStep, setLoginStep] = useState(0);\n\n  const checkUsername = (username, checkLength = false) => {\n    //const username = e.target.value;\n    console.log(\"USERNAME \", username);\n    let userMsg = \"\";\n    if (username.length === 0) {\n      userMsg = i18n.__(\"invalidEntry\");\n    } else {\n      const userState = validUsername(username, config.usernameLength);\n      if (userState === \"LENGTH\") {\n        userMsg = i18n.__(\"usernameError\", { length: config.usernameLength });\n      }\n      if (userState === \"SPACES\") {\n        userMsg = i18n.__(\"usernameError2\");\n      }\n    }\n    if (userMsg !== \"\") {\n      if (!alerts.check().some((alert) => alert.message === userMsg))\n        alerts.error(userMsg, {});\n\n      setUsernameError({ status: true });\n    } else {\n      setUsernameError({ status: false });\n    }\n    return userMsg;\n  };\n  const checkPassword = (password, onBlur = false) => {\n    let checkResult = false;\n\n    if (password.length < config.passwordLength && !onBlur) {\n      checkResult = true;\n    } else if (!(lowerCaseChars(password) && upperCaseChars(password))) {\n      checkResult = true;\n    } else if (\n      !(digitChars(password) && hasNonChars(password) && !hasSpaces(password))\n    ) {\n      checkResult = true;\n    }\n\n    return checkResult;\n  };\n\n  let stepTitle = \"\";\n  let stepProgress = 0;\n  switch (loginStep) {\n    case 1:\n      stepTitle = \"loginButton\";\n      stepProgress = 50;\n      break;\n    case 2:\n      stepTitle = \"confirmTitle\";\n      stepProgress = 100;\n      break;\n    default:\n      stepTitle = \"welcomeMessage\";\n      stepProgress = 50;\n  }\n  return (\n    <React.Fragment>\n      <StyledBox textAlign={\"center\"} pt={20} pb={20}>\n        <PrifinaText height={\"27px\"} />\n        <Image src={Background} />\n        <ProgressContainer\n          title={i18n.__(stepTitle)}\n          progress={stepProgress}\n          mobileApp={true}\n        >\n          {loginStep === 2 && (\n            <Box ml={30} mr={30}>\n              <Box>\n                <Text textAlign={\"left\"} textStyle={\"caption\"} as={\"p\"} m={0}>\n                  {i18n.__(\"authConfirmationText\")}\n                </Text>\n              </Box>\n              <Box mt={15}>\n                <IconField width={\"200px\"}>\n                  <IconField.LeftIcon\n                    iconify={bxKey}\n                    color={\"componentPrimary\"}\n                    size={\"17\"}\n                  />\n                  <IconField.InputField\n                    placeholder={i18n.__(\"codePropmt\")}\n                    id={\"confirmationCode\"}\n                    name={\"confirmationCode\"}\n                  />\n                </IconField>\n              </Box>\n              <Box mt={35} display={\"inline-flex\"}>\n                <Flex>\n                  <Button\n                    variation={\"outline\"}\n                    onClick={() => {\n                      setLoginStep(1);\n                    }}\n                  >\n                    {i18n.__(\"backButton\")}\n                  </Button>\n                </Flex>\n                <Flex ml={45}>\n                  <Button>{i18n.__(\"confirmButton\")}</Button>\n                </Flex>\n              </Box>\n            </Box>\n          )}\n          {loginStep === 1 && (\n            <Box ml={30} mr={30}>\n              <IconField>\n                <IconField.LeftIcon\n                  iconify={bxUser}\n                  color={\"componentPrimary\"}\n                  size={\"17\"}\n                />\n                <IconField.InputField\n                  autoFocus={true}\n                  placeholder={i18n.__(\"usernamePlaceholder\")}\n                  id={\"username\"}\n                  name={\"username\"}\n                  ref={inputUsername}\n                  error={usernameError.status}\n                  onChange={handleChange}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      const userError = checkUsername(e.target.value, true);\n                    }\n                  }}\n                  onBlur={(e) => {\n                    const userError = checkUsername(e.target.value);\n                    if (userError !== \"\") {\n                      setInputUsernameFocus();\n                      e.preventDefault();\n                    }\n                  }}\n                />\n              </IconField>\n\n              <Box\n                display={\"inline-flex\"}\n                justifyContent={\"flex-end\"}\n                width={[1]}\n                style={{\n                  position: \"relative\",\n                  top: \"-2px\",\n                }}\n              >\n                <Flex>\n                  <Button variation={\"link\"} fontSize={\"10px\"}>\n                    {i18n.__(\"forgotUsername\")}\n                  </Button>\n                </Flex>\n              </Box>\n              <Box mt={7}>\n                <PasswordField\n                  placeholder={i18n.__(\"passwordPlaceholder\")}\n                  id={\"password\"}\n                  name={\"password\"}\n                  ref={inputPassword}\n                  error={passwordError.status}\n                  onChange={handleChange}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      let errorMsg = \"\";\n                      if (e.target.value.length === 0) {\n                        errorMsg = i18n.__(\"invalidEntry\");\n                      } else {\n                        const passwordError = checkPassword(e.target.value);\n                        if (passwordError) {\n                          errorMsg = i18n.__(\"passwordQuality\");\n                        }\n                      }\n                      if (errorMsg !== \"\") {\n                        if (\n                          !alerts\n                            .check()\n                            .some((alert) => alert.message === errorMsg)\n                        )\n                          alerts.error(errorMsg, {});\n                        setPasswordError({\n                          status: true,\n                        });\n                      } else {\n                        setPasswordError({\n                          status: false,\n                        });\n                        checkUsername(loginFields.username);\n                      }\n                    }\n                  }}\n                  onBlur={(e) => {\n                    const passwordError = checkPassword(e.target.value, true);\n                    if (passwordError) {\n                      const errorMsg = i18n.__(\"passwordQuality\");\n                      if (\n                        !alerts\n                          .check()\n                          .some((alert) => alert.message === errorMsg)\n                      )\n                        alerts.error(errorMsg, {});\n                      setPasswordError({\n                        status: true,\n                      });\n\n                      setInputPasswordFocus();\n                      e.preventDefault();\n                    } else {\n                      setPasswordError({\n                        status: false,\n                      });\n                    }\n                  }}\n                />\n              </Box>\n              <Box\n                display={\"inline-flex\"}\n                justifyContent={\"flex-end\"}\n                width={[1]}\n                style={{\n                  position: \"relative\",\n                  top: \"-2px\",\n                }}\n              >\n                <Flex>\n                  <Button variation={\"link\"} fontSize={\"10px\"}>\n                    {i18n.__(\"forgotPassword\")}\n                  </Button>\n                </Flex>\n              </Box>\n              <Box mt={35} display={\"inline-flex\"}>\n                <Flex>\n                  <Button\n                    variation={\"outline\"}\n                    onClick={() => {\n                      setLoginStep(0);\n                    }}\n                  >\n                    {i18n.__(\"backButton\")}\n                  </Button>\n                </Flex>\n                <Flex ml={45}>\n                  <Button\n                    onClick={() => {\n                      setLoginStep(2);\n                    }}\n                  >\n                    {i18n.__(\"loginButton\")}\n                  </Button>\n                </Flex>\n              </Box>\n            </Box>\n          )}\n\n          {loginStep === 0 && (\n            <React.Fragment>\n              <Box mt={12} pl={35} pr={35}>\n                <Text textStyle={\"body\"} style={{ wordBreak: \"break-word\" }}>\n                  {titleText}\n                </Text>\n              </Box>\n\n              <Box mt={35} textAlign={\"center\"}>\n                <Box>\n                  <Button\n                    onClick={() => {\n                      setLoginStep(1);\n                    }}\n                  >\n                    {i18n.__(\"loginButton\")}\n                  </Button>\n                </Box>\n                <Box mt={20}>\n                  <Button variation={\"outline\"}>\n                    {i18n.__(\"registerButton\")}\n                  </Button>\n                </Box>\n              </Box>\n            </React.Fragment>\n          )}\n        </ProgressContainer>\n      </StyledBox>\n    </React.Fragment>\n  );\n};\n\nexport default MobileLogin;\n"],"sourceRoot":""}