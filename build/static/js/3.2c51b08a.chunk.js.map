{"version":3,"sources":["remote-component.config.js","lib/hooks/useFetch.js","pages/display-app/components.js","RemoteComponent.js","pages/DisplayApp.js"],"names":["module","exports","resolve","react","require","moment","UseFetch","initialUrl","useState","data","setData","error","setError","isLoading","setIsLoading","url","setUrl","console","log","useEffect","fetch","then","response","json","catch","i18n","init","WidgetWrapper","styled","div","IconDiv","props","open","WidgetContainer","Flex","ModalBackground","SearchContainer","width","left","top","SettingsDiv","WidgetList","React","memo","widgetList","widgetData","map","Widget","i","settings","currentSetting","SettingsDialog","widgetIndex","widgetSetting","onUpdate","inputFields","useRef","timezones","inputRef","fieldInit","setFieldInit","Object","keys","forEach","f","current","fieldTypeCheck","s","indexOf","type","push","tz","names","timezone","text","format","offset","utcOffset","useFormFields","fields","handleChange","length","tzOffset","value","target","id","m","textStyle","textAlign","mt","title","ml","mr","setting","Fragment","placeholder","label","mb","name","defaultValue","onChange","ref","size","t","ii","onClick","e","hasOwnProperty","SearchBox","forwardRef","showHistory","chevronOpen","searchKey","searchOpen","saveSearchKey","search","searchRef","LeftIcon","iconify","bxSearchAlt2","color","InputField","autoFocus","__","onKeyDown","key","display","prevState","RightIcon","bxChevronUp","bxChevronDown","SearchResults","searchBox","roleKey","saveSearchResult","boxRect","getBoundingClientRect","containerProps","height","content","setContent","useFetch","GOOGLE_URL","SEARCH_ENGINE","encodeURIComponent","API_KEY","items","item","href","link","data-link","itemIndex","parseInt","currentTarget","dataset","style","fontSize","snippet","SearchHistory","searchHistory","requires","createRequires","RemoteComponent","createRemoteComponent","short","config","appSync","aws_appsync_graphqlEndpoint","main_region","aws_appsync_authenticationType","cognito","USER_POOL_ID","IDENTITY_POOL_ID","APP_CLIENT_ID","S3Config","AWSS3","bucket","S3","region","fn","animations","index","DisplayApp","widgetConfigData","appSyncClient","prifinaID","usePrifina","currentUser","check","setSettings","getLocalization","getSettings","getCallbacks","registerClient","Prifina","API","activeRole","WidgetHooks","appId","Amplify","configure","setWidgetList","widgetConfig","activeTab","setActiveTab","setSearchHistory","setSearchKey","setOpen","flipped","setFlipped","widgetImage","widget","animationItems","_","useSprings","springs","setSprings","refs","settingsRef","widgetSettings","w","appID","installCount","takeSnapshot","a","DEFAULT_PNG","fileName","html2CanvasOptions","ww","document","querySelectorAll","element","ReactDOM","findDOMNode","html2canvas","scrollY","window","useCORS","canvas","toDataURL","opacity","transform","visibility","mass","tension","friction","reset","onStart","delay","from","to","onRest","GRAPHQL","Storage","widgets","duration","openSettings","bxCog","className","data-widget-index","newSettings","k","field","currentAppId","c","widgetInstallCount","mutate","mutation","gql","addSearchKey","variables","input","owner","uuid","role","searchResult","searchBuckeyKey","generate","addSearchResult","selectedResult","put","JSON","stringify","level","contentType","metadata","created","Date","toISOString","position","zIndex","src","spring","overflow","tab","paddingBottom"],"mappings":"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","file":"static/js/3.2c51b08a.chunk.js","sourcesContent":["/**\n * Dependencies for Remote Components\n */\nmodule.exports = {\n  resolve: {\n    react: require(\"react\"),\n    \"styled-components\": require(\"styled-components\"),\n    \"styled-system\": require(\"styled-system\"),\n    \"react-dnd\": require(\"react-dnd\"),\n    \"react-dnd-html5-backend\": require(\"react-dnd-html5-backend\"),\n    \"@prifina/hooks\": require(\"@prifina/hooks\"),\n    moment: require(\"moment\"),\n    \"moment-timezone\": require(\"moment-timezone\"),\n  },\n};\n","import { useState, useEffect } from \"react\";\n\nconst UseFetch = initialUrl => {\n  // create state variables\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [url, setUrl] = useState(initialUrl);\n  console.log(\"FETCH \", url);\n\n  useEffect(() => {\n    if (!url) return;\n    setIsLoading(true);\n    // clear old search\n    setData(null);\n    setError(null);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        //console.log(\"FETCH \", data);\n        setIsLoading(false);\n        setData(data);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setError(error);\n      });\n  }, [url]);\n\n  return { data, error, isLoading, setUrl };\n};\n\nexport default UseFetch;\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\n\nimport React, { useRef, forwardRef, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  Box,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Divider,\n  IconField,\n  Label,\n  Select,\n} from \"@blend-ui/core\";\nimport { useFormFields } from \"../../lib/formFields\";\nimport bxSearchAlt2 from \"@iconify/icons-bx/bx-search-alt-2\";\nimport bxChevronUp from \"@iconify/icons-bx/bx-chevron-up\";\nimport bxChevronDown from \"@iconify/icons-bx/bx-chevron-down\";\n\nimport useFetch from \"../../lib/hooks/useFetch\";\nimport { API_KEY, GOOGLE_URL, SEARCH_ENGINE } from \"../../config\";\n\nimport i18n from \"../../lib/i18n\";\n\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport PropTypes from \"prop-types\";\n\ni18n.init();\n\nexport const WidgetWrapper = styled.div`\n  margin: 10px;\n  border: 2px outset;\n  border-radius: 8px;\n  min-height: 200px;\n  min-width: 200px;\n`;\nexport const IconDiv = styled.div`\n  height: 24px;\n  position: relative;\n  left: 197px;\n  top: 23px;\n  opacity: 0;\n  cursor: ${props => (props.open ? \"default\" : \"pointer\")};\n  &:hover {\n    opacity: ${props => (props.open ? 0 : 1)};\n  }\n`;\nexport const WidgetContainer = styled(Flex)`\n  /*\nwidth: 100%;\nheight: 100vh;\ndisplay: flex;\n*/\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-content: flex-start;\n  justify-content: flex-start;\n  position: relative;\n  top: 0px;\n  left: 0px;\n  overflow-y: auto;\n`;\nexport const ModalBackground = styled.div`\n  width: 100%;\n  height: 100vh;\n  z-index: 5;\n  background-color: rgba(30, 29, 29, 0.3);\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n/*\nexport const SearchModal = styled.div`\nwidth: 100%;\nheight: 100vh;\nz-index: 15;\nbackground-color: rgba(30, 29, 29, 0.3);\nposition: absolute;\nleft: 0;\ntop: 0;\n`;\n*/\nexport const SearchContainer = styled.div`\n  width: ${props => props.width}px;\n  /* height: 100vh; */\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: 20;\n  background-color: white;\n  position: absolute;\n  left: ${props => props.left}px;\n  top: ${props => props.top}px;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\nexport const SettingsDiv = styled.div`\n  background-color: white;\n\n  width: 100%;\n  height: 100%;\n  border: 2px outset;\n  border-radius: 8px;\n  z-index: 10;\n`;\n\nexport const WidgetList = React.memo(({ widgetList, widgetData }) => {\n  // currentUser\n  // localization\n  // settings\n  console.log(\"WIDGET LIST \", widgetList);\n  console.log(\"WIDGET DATA\", widgetData);\n  return (\n    <>\n      {widgetList.map((Widget, i) => {\n        return (\n          <Widget\n            data={{ settings: widgetData[i].currentSetting }}\n            key={\"prifina-widget-\" + i}\n          />\n        );\n      })}\n    </>\n  );\n});\n\nWidgetList.propTypes = {\n  widgetList: PropTypes.array.isRequired,\n  widgetData: PropTypes.array.isRequired,\n};\n\n//moment.tz.guess()\n//console.log(\"MOMENT \", moment.tz.names());\n/*\n  var select = document.getElementById('timezones');\nmoment.tz.names().forEach(function(timezone){\n\tvar option = document.createElement('option');\n  option.textContent = timezone + ': ' + moment.tz(timezone).format('Z');\n  select.appendChild(option);\n});\n*/\n/*\nmoment.tz.names().forEach(function (timezone) {\n  //console.log(moment.tz(timezone).utcOffset());\n});\n*/\n//console.log(moment.tz.names());\n/*\n<Label htmlFor=\"cabinClass\">Cabin Class</Label>\n<Select\n  id=\"cabinClass\"\n  name=\"cabinClass\"\n  defaultValue=\"Premium Economy\"\n  onChange={changeAction}\n>\n  <option>Economy</option>\n  <option>Premium Economy</option>\n  <option>Business</option>\n  <option>First Class</option>\n  <option>\n    With a super long label that doesn't get clobbered by the chevron\n  </option>\n</Select>\n*/\n\nexport const SettingsDialog = ({\n  widgetIndex,\n  widgetSetting,\n  onUpdate,\n  ...props\n}) => {\n  //const currentSettings = widgetSettings[widget];\n  console.log(\"SETTINGS \", widgetIndex, widgetSetting);\n  let inputFields = useRef({});\n  let timezones = useRef([]);\n  const inputRef = useRef();\n  const [fieldInit, setFieldInit] = useState(false);\n  useEffect(() => {\n    Object.keys(widgetSetting.currentSetting).forEach(f => {\n      inputFields.current[f] = widgetSetting.currentSetting[f];\n    });\n    console.log(\"FLDS \", inputFields);\n    console.log(\"DIALOG \", props);\n    let fieldTypeCheck = [];\n    widgetSetting.settings.forEach(s => {\n      console.log(s);\n      if (fieldTypeCheck.indexOf(s.type) === -1) fieldTypeCheck.push(s.type);\n    });\n    //console.log(fieldTypeCheck);\n\n    // have timezone field type...\n    if (fieldTypeCheck.indexOf(\"TZ\") > -1) {\n      moment.tz.names().forEach(function (timezone) {\n        timezones.current.push({\n          text: timezone + \": \" + moment.tz(timezone).format(\"Z\"),\n          tz: timezone,\n          offset: moment.tz(timezone).utcOffset(),\n        });\n      });\n    }\n    setFieldInit(true);\n  }, []);\n  //console.log(timezones);\n\n  const [fields, handleChange] = useFormFields(inputFields.current);\n\n  console.log(\"RENDER FIELDS \", fields, inputFields);\n\n  if (timezones.current.length > 0) {\n    const tzOffset = moment.tz(fields.tz).utcOffset();\n    console.log(\"TZ \", inputFields, tzOffset);\n    if (tzOffset !== inputFields.current.offset) {\n      inputFields.current.offset = tzOffset;\n      inputFields.current.tz = fields.tz;\n      console.log(\"INPUT \", inputRef);\n      if (inputRef.current) {\n        inputRef.current.value = tzOffset;\n      }\n\n      handleChange({\n        target: {\n          id: \"offset\",\n          value: tzOffset,\n        },\n      });\n    }\n  }\n\n  return (\n    <Box m={2}>\n      <Text textStyle={\"h3\"} textAlign={\"center\"} mt={10}>\n        {widgetSetting.title}\n      </Text>\n      <Divider />\n      {fieldInit && (\n        <Box mt={10} ml={5} mr={5}>\n          {widgetSetting.settings.map((setting, i) => {\n            return (\n              <React.Fragment key={\"settings-\" + i}>\n                {setting.type === \"text\" && (\n                  <Input\n                    mt={15}\n                    key={\"widget-setting-\" + i}\n                    placeholder={setting.label}\n                    mb={2}\n                    id={setting.value}\n                    name={setting.value}\n                    defaultValue={fields[setting.value]}\n                    onChange={handleChange}\n                    ref={inputRef}\n                  />\n                )}\n                {setting.type === \"TZ\" && (\n                  <>\n                    <Label key={\"setting-label-\" + i} mt={10}>\n                      {setting.label}\n                    </Label>\n                    <Select\n                      mb={10}\n                      size={\"sm\"}\n                      key={\"widget-setting-\" + i}\n                      id={setting.value}\n                      name={setting.value}\n                      defaultValue={fields[setting.value]}\n                      onChange={handleChange}\n                    >\n                      {timezones.current.map((t, ii) => {\n                        return (\n                          <option\n                            key={\"widget-setting-\" + i + \"-\" + ii}\n                            value={t.tz}\n                          >\n                            {t.text}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n          <Box mt={10}>\n            <Button\n              width={\"100%\"}\n              onClick={e => {\n                console.log(\"UPDATE BUTTON \", fields);\n                //console.log(fields);\n                if (timezones.length > 0 && fields.hasOwnProperty(\"tz\")) {\n                  onUpdate({\n                    tz: fields.tz,\n                    offset: moment.tz(fields.tz).utcOffset(),\n                  });\n                } else {\n                  onUpdate(fields);\n                }\n                //console.log(\"UPDATE CLICK \", e.target.className);\n                //onUpdate(fields);\n              }}\n            >\n              Update\n            </Button>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nSettingsDialog.propTypes = {\n  widgetIndex: PropTypes.number.isRequired,\n  widgetSetting: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport const SearchBox = forwardRef(\n  ({ showHistory, chevronOpen, searchKey, searchOpen, saveSearchKey }, ref) => {\n    const [fields, handleChange] = useFormFields({\n      search: \"\",\n    });\n    const searchRef = useRef();\n    return (\n      <Box ml={10} mr={10} ref={ref}>\n        <IconField>\n          <IconField.LeftIcon\n            iconify={bxSearchAlt2}\n            color={\"componentPrimary\"}\n            size={\"17\"}\n          />\n          <IconField.InputField\n            ref={searchRef}\n            autoFocus={true}\n            placeholder={i18n.__(\"Search\")}\n            id={\"search\"}\n            name={\"search\"}\n            onChange={handleChange}\n            onKeyDown={e => {\n              if (e.key === \"Enter\") {\n                //console.log(\"SEARCH ....\", fields.search);\n                saveSearchKey(fields.search);\n                searchKey(fields.search);\n              }\n            }}\n          />\n          <Box\n            display={\"inline-flex\"}\n            onClick={() => {\n              if (!searchOpen) {\n                showHistory(prevState => !prevState);\n              }\n              searchRef.current.value = \"\";\n              searchKey(\"\");\n            }}\n          >\n            <IconField.RightIcon\n              iconify={chevronOpen || searchOpen ? bxChevronUp : bxChevronDown}\n              color={\"componentPrimary\"}\n              size={\"17\"}\n            />\n          </Box>\n        </IconField>\n      </Box>\n    );\n  },\n);\nSearchBox.propTypes = {\n  showHistory: PropTypes.func.isRequired,\n  chevronOpen: PropTypes.bool.isRequired,\n  searchKey: PropTypes.func.isRequired,\n  searchOpen: PropTypes.bool,\n  saveSearchKey: PropTypes.func.isRequired,\n};\n\nexport const SearchResults = props => {\n  const { searchBox, searchKey, roleKey, saveSearchResult } = props;\n  //console.log(searchBox);\n  //console.log(searchBox.current.getBoundingClientRect());\n  const boxRect = searchBox.current.getBoundingClientRect();\n  const containerProps = {\n    width: boxRect.width,\n    left: boxRect.left,\n    top: boxRect.top + boxRect.height + 5,\n  };\n  console.log(containerProps);\n\n  console.log(\"NEW SEARCH \", searchKey);\n  const [content, setContent] = useState(null);\n  const { data, error, isLoading, setUrl } = useFetch();\n  /*\n  setUrl(\n    `${GOOGLE_URL}?cx=${SEARCH_ENGINE}&exactTerms=${\n      roleKey.length > 0 ? encodeURIComponent(roleKey) : \"\"\n    }&q=${encodeURIComponent(searchKey)}&lr=lang_en&key=${API_KEY}`,\n  );\n*/\n  //let searchHistory = [];\n  /*\n  let searchHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n  if (searchHistory === null) {\n    searchHistory = [];\n  } else {\n    searchHistory.unshift({ search: searchKey });\n  }\n  localStorage.setItem(\"searchHistory\", JSON.stringify(searchHistory));\n*/\n  useEffect(() => {\n    if (!isLoading)\n      setUrl(\n        `${GOOGLE_URL}?cx=${SEARCH_ENGINE}&exactTerms=${\n          roleKey.length > 0 ? encodeURIComponent(roleKey) : \"\"\n        }&q=${encodeURIComponent(searchKey)}&lr=lang_en&key=${API_KEY}`,\n      );\n    if (error) setContent(<h2>Error when fetching: {error}</h2>);\n    if (!data && isLoading) setContent(<h2>LOADING...</h2>);\n    if (!data && !isLoading) setContent(null);\n    if (data) {\n      //console.log(Object.keys(data));\n      console.log(data);\n      const items = data.items.map((item, i) => {\n        return (\n          <li key={\"search-result-\" + i}>\n            <div>\n              <a\n                href={item.link}\n                data-link={i}\n                onClick={e => {\n                  const itemIndex = parseInt(e.currentTarget.dataset[\"link\"]);\n                  console.log(\"LINK CLICK \", data.items[itemIndex]);\n                  saveSearchResult(searchKey, data.items[itemIndex]);\n                }}\n                target={\"_blank\"}\n              >\n                {item.title}\n              </a>\n            </div>\n            <div style={{ fontSize: \"0.75rem\" }}>{item.snippet}</div>\n          </li>\n        );\n      });\n      setContent(<ol>{items}</ol>);\n    }\n  }, [searchKey, error, isLoading, data]);\n  /*\n  const getContent = newSearch => {\n    if (error) return <h2>Error when fetching: {error}</h2>;\n    if (!data && isLoading) return <h2>LOADING...</h2>;\n    if (!data) return null;\n    console.log(Object.keys(data));\n    console.log(data);\n    console.log(\"NEW SEARCH2 \", searchKey);\n    console.log(\"NEW SEARCH3 \", newSearch);\n    console.log(\"NEW SEARCH4 \", prevSearchKey);\n\n    prevSearchKey.current = newSearch;\n    return (\n      <ol>\n        {data.items.map((item, i) => {\n          return (\n            <li key={\"search-result-\" + i}>\n              <div>\n                <a href={item.link} target={\"_blank\"}>\n                  {item.title}\n                </a>\n              </div>\n              <div style={{ fontSize: \"0.75rem\" }}>{item.snippet}</div>\n            </li>\n          );\n        })}\n      </ol>\n    );\n  };\n*/\n\n  return (\n    <>\n      <SearchContainer {...containerProps}>\n        <Text textStyle={\"h4\"}>Search results</Text>\n        <Divider />\n        {content}\n      </SearchContainer>\n    </>\n  );\n};\nSearchResults.propTypes = {\n  searchBox: PropTypes.object.isRequired,\n  searchKey: PropTypes.string,\n  roleKey: PropTypes.string,\n  saveSearchResult: PropTypes.func.isRequired,\n};\n\nexport const SearchHistory = props => {\n  const { searchBox } = props;\n  console.log(\"HISTORY \", searchBox);\n  //console.log(searchBox.current.getBoundingClientRect());\n  const boxRect = searchBox.current.getBoundingClientRect();\n  const containerProps = {\n    width: boxRect.width,\n    left: boxRect.left,\n    top: boxRect.top + boxRect.height + 5,\n  };\n  console.log(containerProps);\n  let searchHistory = [];\n  /*\n  let searchHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n  if (searchHistory === null) {\n    searchHistory = [{ search: \"Testing...\" }];\n  }\n*/\n  /*\n    localStorage.setItem(\n      \"WidgetImage\",\n      JSON.stringify({ image: res.target.result })\n    );\n    */\n\n  return (\n    <>\n      <SearchContainer {...containerProps}>\n        <Text textStyle={\"h4\"}>Search history</Text>\n        <Divider />\n        <ol>\n          {searchHistory.length > 0 &&\n            searchHistory.map((item, i) => {\n              return <li key={\"search-\" + i}>{item.search}</li>;\n            })}\n        </ol>\n      </SearchContainer>\n    </>\n  );\n};\n\nSearchHistory.propTypes = {\n  searchBox: PropTypes.object.isRequired,\n};\n","import {\n  createRequires,\n  createRemoteComponent,\n} from \"@paciolan/remote-component\";\n\nimport { resolve } from \"./remote-component.config.js\";\n\nconst requires = createRequires(resolve);\n\nexport const RemoteComponent = createRemoteComponent({ requires });\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/display-name */\n/* eslint-disable react/no-multi-comp */\n\nimport React, { useRef, useState, useEffect, forwardRef } from \"react\";\nimport { usePrifina } from \"@prifina/hooks\";\nimport { BlendIcon } from \"@blend-ui/icons\";\nimport bxCog from \"@iconify/icons-bx/bx-cog\";\n\nimport html2canvas from \"html2canvas\";\nimport ReactDOM from \"react-dom\";\nimport { useSprings, animated } from \"react-spring\";\n\nimport { RemoteComponent } from \"../RemoteComponent\";\nimport { Tabs, Tab, TabList, TabPanel, TabPanelList } from \"@blend-ui/tabs\";\nimport i18n from \"../lib/i18n\";\n\n//import widgetData from \"./widgetData\";\n//import installedWidgets from \"./installedWidgets\";\n\nimport Amplify, { API as GRAPHQL, Storage } from \"aws-amplify\";\nimport config from \"../config\";\n\nimport gql from \"graphql-tag\";\n\nimport * as C from \"./display-app/components\";\n\n//import { addSearchResultMutation, addSearchKeyMutation } from \"../graphql/api\";\nimport { addSearchResult, addSearchKey } from \"../graphql/mutations\";\n\nconst short = require(\"short-uuid\");\nimport PropTypes from \"prop-types\";\ni18n.init();\n\nconst APIConfig = {\n  aws_appsync_graphqlEndpoint: config.appSync.aws_appsync_graphqlEndpoint,\n  aws_appsync_region: config.main_region,\n  aws_appsync_authenticationType: config.appSync.aws_appsync_authenticationType,\n};\n\nconst AUTHConfig = {\n  // To get the aws credentials, you need to configure\n  // the Auth module with your Cognito Federated Identity Pool\n  mandatorySignIn: false,\n  userPoolId: config.cognito.USER_POOL_ID,\n  identityPoolId: config.cognito.IDENTITY_POOL_ID,\n  userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  region: config.main_region,\n};\n\nconst S3Config = {\n  AWSS3: {\n    bucket: config.S3.bucket, //REQUIRED -  Amazon S3 bucket name\n    region: config.S3.region, //OPTIONAL -  Amazon service region\n  },\n};\n\nconst fn = animations => index => animations[index];\n\nconst DisplayApp = ({ widgetConfigData, appSyncClient, prifinaID }) => {\n  console.log(\"PROPS \", widgetConfigData, Object.keys(widgetConfigData));\n  console.log(\"DISPLAY APP \", prifinaID);\n  const {\n    check,\n    currentUser,\n    getLocalization,\n    getSettings,\n    setSettings,\n    getCallbacks,\n    registerClient,\n    API,\n    Prifina,\n    activeRole,\n  } = usePrifina();\n\n  console.log(\"DISPLAY APP \", currentUser);\n  const WidgetHooks = new Prifina({ appId: \"WIDGETS\" });\n  //console.log(check());\n  Amplify.configure(S3Config);\n\n  const [widgetList, setWidgetList] = useState([]);\n  const [widgetConfig, setWidgetConfig] = useState(widgetConfigData);\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  const [searchHistory, setSearchHistory] = useState(false);\n  const searchBox = useRef();\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  const [open, setOpen] = useState(false);\n  const [flipped, setFlipped] = useState(false);\n  const widgetImage = useRef();\n\n  const settings = useRef({\n    left: \"0px\",\n    top: \"0px\",\n    height: \"0px\",\n    width: \"0px\",\n    widget: -1,\n  });\n\n  const items = [{}, {}];\n  const animationItems = useRef(items.map((_, index) => index));\n\n  const [springs, setSprings] = useSprings(\n    items.length,\n    fn(animationItems.current),\n  );\n\n  const refs = useRef([]);\n  const settingsRef = useRef([]);\n  const widgetSettings = useRef(\n    widgetConfigData.map((w, i) => {\n      return {\n        settings: w.widget.settings || [],\n        title: w.widget.title,\n        appId: w.widget.appID,\n        installCount: w.widget.installCount,\n        currentSetting: w.currentSetting,\n      };\n    }),\n  );\n\n  const roleKeys = [\"\", \"work\", \"family\", \"hobbies\"];\n  const tabClick = (e, tab) => {\n    console.log(\"Click\", e);\n    console.log(\"TAB\", tab);\n    setActiveTab(tab);\n  };\n\n  const takeSnapshot = async w => {\n    const DEFAULT_PNG = {\n      fileName: \"component.png\",\n      type: \"image/png\",\n      html2CanvasOptions: {},\n    };\n    if (w !== -1) {\n      const ww = document.querySelectorAll(\n        \"[data-widget-index='\" + w + \"']\",\n      )[0];\n\n      const element = ReactDOM.findDOMNode(ww);\n      const canvas = await html2canvas(element, {\n        scrollY: -window.scrollY,\n        useCORS: true,\n        //backgroundColor: null,\n        ...DEFAULT_PNG,\n      });\n      const f = canvas.toDataURL(DEFAULT_PNG.type, 1.0);\n      //console.log(\"FILE2 \", f);\n      console.log(\"NEW SNAPSHOT TAKEN...\");\n      widgetImage.current = f;\n      setOpen(true);\n      //setWidgetImage(f);\n    }\n  };\n  const openSettings = w => {\n    if (!open) {\n      console.log(\"CLICK...\", w);\n      //console.log(\"REFS...\", refs.current[0].getBoundingClientRect());\n      //const ww = refs.current[w].getBoundingClientRect();\n      //console.log(document.querySelectorAll(\"[data-widget-index='\" + w + \"']\"));\n\n      const ww = document\n        .querySelectorAll(\"[data-widget-index='\" + w + \"']\")[0]\n        .getBoundingClientRect();\n      // const element = ReactDOM.findDOMNode(refs.current[settings.widget]);\n      //const ww = { left: 0, top: 0, height: 0, width: 0 };\n      console.log(\"WW...\", ww);\n\n      settings.current = {\n        left: ww.left + \"px\",\n        top: ww.top + \"px\",\n        height: ww.height + \"px\",\n        width: ww.width + \"px\",\n        widget: w,\n      };\n\n      animationItems.current = [\n        {\n          opacity: 1,\n          transform: `perspective(1000px) rotateY(0deg)`,\n          height: ww.height + \"px\",\n          width: ww.width + \"px\",\n          visibility: \"visible\",\n          reset: true,\n          config: {\n            mass: 5,\n            tension: 500,\n            friction: 80,\n            duration: 1000,\n          },\n          onRest: () => {\n            //setFlipped(true);\n          },\n          onStart: () => {\n            //refs.current[0].style.visibility = \"hidden\";\n          },\n        },\n\n        {\n          delay: 500,\n          reset: true,\n          from: {\n            transform: \"none\",\n            width: ww.width + \"px\",\n            height: ww.height + \"px\",\n            visibility: \"hidden\",\n          },\n          to: {\n            transform: \"none\",\n            width: \"400px\",\n            height: \"400px\",\n            visibility: \"hidden\",\n          },\n        },\n      ];\n\n      setSprings(fn(animationItems.current));\n\n      takeSnapshot(w);\n      //setOpen(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"OPEN CHANGE \", open);\n    if (open) {\n      //console.log(\"REFS....\", document.querySelectorAll(\".prifina-widget[data-widget-index='0']\"));\n      //console.log(\"REFS....\", document.querySelectorAll(\".prifina-widget\"));\n\n      animationItems.current = [\n        {\n          opacity: 1,\n          transform: `perspective(1000px) rotateY(180deg)`,\n          width: settings.current.width,\n          height: settings.current.height,\n          visibility: \"visible\",\n          config: { mass: 5, tension: 500, friction: 80 },\n          reset: true,\n          onStart: () => {\n            // hide widget...\n            //refs.current[settings.widget].style.visibility = \"hidden\";\n          },\n        },\n        {\n          delay: 500,\n          reset: true,\n          from: {\n            transform: \"none\",\n            width: settings.current.width,\n            height: settings.current.height,\n            visibility: \"visible\",\n          },\n          to: {\n            transform: \"none\",\n            width: \"400px\",\n            height: \"400px\",\n            visibility: \"visible\",\n          },\n          onStart: () => {\n            if (settingsRef.current[0]) {\n              //console.log(\"ENDS...\", settingsRef.current[0]);\n              setFlipped(true);\n              //settingsRef.current[0].style.display = \"none\";\n            }\n          },\n          onRest: () => {\n            if (settingsRef.current[1]) {\n              //console.log(\"ENDS...\", settingsRef.current[1]);\n              // settingsRef.current[0].style.visibility = \"hidden\";\n            }\n          },\n        },\n      ];\n\n      setSprings(fn(animationItems.current));\n    } else {\n      if (settings.current.widget != -1) {\n        console.log(\"INIT SPRINGS....\");\n        animationItems.current = [{}, {}];\n        setSprings(fn(animationItems.current));\n        setFlipped(false);\n        settingsRef.current = [];\n        settings.current = {\n          left: \"0px\",\n          top: \"0px\",\n          height: \"0px\",\n          width: \"0px\",\n          widget: -1,\n        };\n      }\n    }\n  }, [open]);\n\n  useEffect(() => {\n    registerClient([appSyncClient, GRAPHQL, Storage]);\n    /*\n    let data = installedWidgets.map(w => {\n      return {\n        url: widgetData[w].url,\n        settings: widgetData[w].settings.length > 0,\n        currentSetting: {},\n      };\n    });\n*/\n    console.log(\"WIDGET CONFIG \", widgetConfig);\n    /*\n    //await getSettings(appID, \"f902cbca-8748-437d-a7bb-bd2dc9d25be5\")\n    let allSettings = [];\n    getSettings(\"\", \"f902cbca-8748-437d-a7bb-bd2dc9d25be5\").then(res => {\n      //console.log(\"SETTINGS \", res);\n      const widgets = JSON.parse(res.data.getInstalledWidgets.installedWidgets);\n      console.log(\"INSTALLED \", widgets);\n      widgetSettings.current = widgetConfig.map((w, i) => {\n        let defaultValues = {};\n        if (w.settings) {\n          w.widget.settings.forEach(v => {\n            // if type=text...\n            defaultValues[v.value] = \"\";\n          });\n          if (widgets.hasOwnProperty(w.widget.appID)) {\n            //console.log(\"SEETINGS FOUND \", w.widget.appID);\n            widgets[w.widget.appID].forEach(w => {\n              if (defaultValues.hasOwnProperty(w.field)) {\n                defaultValues[w.field] = w.value;\n              }\n            });\n          }\n        }\n        widgetConfig[i].currentSetting = defaultValues;\n        return {\n          settings: w.widget.settings || [],\n          title: w.widget.title,\n          appId: w.widget.appID,\n          currentSetting: defaultValues,\n        };\n      });\n\n      console.log(\"WIDGET CONFIG 2\", widgetConfig);\n    });\n    */\n    /*\n    widgetSettings.current = widgetConfig.map((w, i) => {\n      let defaultValues = {};\n      console.log(\"WIDGET SETTINGS \", w);\n      if (w.settings) {\n        w.widget.settings.forEach(v => {\n          // if type=text...\n          defaultValues[v.value] = \"\";\n        });\n        allSettings.push(getSettings(w));\n      } else {\n        allSettings.push(Promise.resolve({}));\n      }\n\n      return {\n        settings: w.widget.settings || [],\n        title: w.widget.title,\n        appId: w.widget.appID,\n        currentSetting: defaultValues,\n      };\n    });\n    */\n    /*\n    Promise.all(allSettings).then(r => {\n      //console.log(\"GET SETTINGS \", r);\n      r.forEach((d, i) => {\n        //console.log(\"GET SETTINGS 2\", d);\n        let defaultValues = {};\n        if (Object.keys(d).length > 0) {\n          Object.keys(d).forEach(k => {\n            defaultValues[k] = d[k];\n          });\n          widgetConfig[i].currentSetting = defaultValues;\n          widgetSettings.current[i].currentSetting = defaultValues;\n        }\n      });\n      //console.log(\"WIDGET CONFIG \", data);\n      //setWidgetConfig(data);\n    });\n    */\n    /*\n    console.log(\"GET SETTINGS \", d);\n        if (Object.keys(d).length > 0) {\n          Object.keys(d).forEach(k => {\n            defaultValues[k] = d[k];\n          });\n        }\n        data[i].currentSetting = defaultValues;\n\n    console.log(\"WIDGET CONFIG \", data);\n    setWidgetConfig(data);\n    */\n  }, []);\n\n  useEffect(() => {\n    if (widgetConfig.length > 0) {\n      console.log(\"CREATE WIDGETS...\");\n      const widgets = widgetConfig.map((widget, i) => {\n        console.log(\"WIDGET COMPONENT \", widget);\n        //React.forwardRef((props, ref) =>\n\n        const Widget = forwardRef((props, ref) => {\n          console.log(\"W \", props);\n          return (\n            <React.Fragment>\n              <div>\n                {widget.settings && (\n                  <C.IconDiv open={props.open} onClick={() => openSettings(i)}>\n                    <BlendIcon iconify={bxCog} />\n                  </C.IconDiv>\n                )}\n                <C.WidgetWrapper\n                  className={\"prifina-widget\"}\n                  data-widget-index={i}\n                  key={\"widget-wrapper-\" + i}\n                  ref={ref}\n                >\n                  <RemoteComponent url={widget.url} {...props} />\n                </C.WidgetWrapper>\n              </div>\n            </React.Fragment>\n          );\n        });\n\n        //const Widget = (props) => <RemoteComponent url={remoteUrl} {...props} />;\n\n        //return <Widget key={\"prifina-widget-\" + i} test={\"ok\"} />;\n        return Widget;\n      });\n      //refs.current = widgets;\n      // <RemoteComponent url={remoteUrl} fallback={<div>Testing...</div>} />;\n      console.log(\"WIDGETS \", widgets);\n\n      setWidgetList(widgets);\n    }\n  }, [widgetConfig]);\n\n  const onUpdate = data => {\n    console.log(\"Update settings \", data);\n    console.log(\"HOOK \", WidgetHooks);\n    //console.log(getCallbacks());\n    console.log(settings.current, widgetSettings);\n    let newSettings = [];\n    Object.keys(data).forEach(k => {\n      widgetSettings.current[settings.current.widget].currentSetting[k] =\n        data[k];\n      newSettings.push({ field: k, value: data[k] });\n    });\n    const currentAppId = widgetSettings.current[settings.current.widget].appId;\n    //\"f902cbca-8748-437d-a7bb-bd2dc9d25be5\"\n    /*\n    input WidgetSettingInput {\n      field: String!\n      value: String!\n    }\n*/\n    console.log(\"NEW SETTINGS \", newSettings, currentAppId);\n    // useCallback((appID, uuid, settings = [{}])\n    setSettings(currentAppId, prifinaID, {\n      type: \"WIDGET\",\n      index: settings.current.widget,\n      settings: newSettings,\n    });\n    const c = getCallbacks();\n    console.log(\"CALLBACKS \", c);\n    const widgetInstallCount =\n      widgetSettings.current[settings.current.widget].installCount;\n    console.log(\n      \" CALLBACK \",\n      c.hasOwnProperty(currentAppId),\n      widgetInstallCount,\n    );\n    console.log(\" CALLBACK \", typeof c[currentAppId][widgetInstallCount]);\n    if (\n      c.hasOwnProperty(currentAppId) &&\n      typeof c[currentAppId][widgetInstallCount] === \"function\"\n    ) {\n      console.log(\"FOUND CALLBACK \");\n      c[currentAppId][widgetInstallCount]({ settings: data });\n    }\n    //setWidgetData([data]);\n    //setOpen(false);\n    //console.log(check());\n    /*\n    console.log(settings, widgetSettings[settings.current.widget]);\n    const currentSettings = widgetSettings[settings.current.widget];\n    console.log(prifina.getCallbacks());\n    const c = prifina.getCallbacks();\n    if (typeof c[currentSettings.appID] === \"function\") {\n      prifina.setSettings(currentSettings.appID, data);\n      c[currentSettings.appID](data);\n      setOpen(false);\n    }\n    */\n    setOpen(false);\n  };\n\n  const saveSearchKey = async searchKey => {\n    if (searchKey.length > 0)\n      await appSyncClient.mutate({\n        mutation: gql(addSearchKey),\n        variables: {\n          input: {\n            owner: currentUser.uuid,\n            searchKey: searchKey,\n            role: activeTab === 0 ? \"\" : roleKey[activeTab],\n          },\n        },\n      });\n\n    /*\n      addSearchKeyMutation(GRAPHQL, {\n        owner: currentUser.uuid,\n        searchKey: searchKey,\n        role: activeTab === 0 ? \"\" : roleKey[activeTab],\n      });\n      */\n    /*\ninput SearchKeyInput {\n\towner: String!\n\tsearchKey: String\n\trole: String\n}\n*/\n  };\n  const saveSearchResult = async (searchKey, searchResult) => {\n    if (searchKey.length > 0) {\n      const searchBuckeyKey = \"search-results/\" + short.generate() + \".json\";\n\n      await appSyncClient.mutate({\n        mutation: gql(addSearchResult),\n        variables: {\n          input: {\n            owner: currentUser.uuid,\n            searchKey: searchKey,\n            role: activeTab === 0 ? \"\" : roleKey[activeTab],\n            selectedResult: searchBuckeyKey,\n          },\n        },\n      });\n\n      /*\n      addSearchResultMutation(GRAPHQL, {\n        owner: currentUser.uuid,\n        searchKey: searchKey,\n        role: activeTab === 0 ? \"\" : roleKey[activeTab],\n        selectedResult: searchBuckeyKey,\n      });\n      */\n      await Storage.put(searchBuckeyKey, JSON.stringify(searchResult), {\n        level: \"public\",\n        contentType: \"application/json\",\n\n        metadata: {\n          owner: currentUser.uuid,\n          searchKey: searchKey,\n          created: new Date().toISOString(),\n        },\n      });\n    }\n\n    /*\n\ninput SearchResultInput {\n\towner: String!\n\tsearchKey: String!\n\tselectedResult: AWSJSON\n}\n\n*/\n  };\n  /*\n  useEffect(() => {\n    if (widgetList.length > 0) {\n      const widgets = document.querySelectorAll(\n        \".prifina-widget >*:first-child\",\n      );\n      console.log(widgets);\n      widgets.forEach((w, i) => {\n        console.log(w.getBoundingClientRect());\n      });\n    }\n  }, [widgetList]);\n*/\n  return (\n    <>\n      {open && (\n        <C.ModalBackground\n          className={\"widget-modal\"}\n          onClick={e => {\n            console.log(\"TARGET \", e);\n            console.log(\"WIDGET SETTINGS \", refs.current, settings);\n            console.log(\"MODAL \", e.target.className);\n\n            /*\n            console.log(\"CURRENT \", refs.current[settings.widget]);\n            refs.current[settings.widget].style.visibility = \"visible\";\n            */\n            if (e.target.className.indexOf(\"widget-modal\") > -1) {\n              setOpen(false);\n            }\n          }}\n        >\n          {springs.map((props, i) => {\n            console.log(\"IMAGE \", widgetImage);\n            // widget settings...\n            console.log(settings.current);\n            console.log(widgetSettings);\n            /*\n            const title = widgetSettings.current[settings.current.widget].title;\n            const settingsFields =\n              widgetSettings.current[settings.current.widget].settings;\n            const currentSetting =\n              widgetSettings.current[settings.current.widget].currentSetting;\n*/\n            return (\n              <animated.div\n                style={{\n                  transform: props.transform,\n\n                  left: settings.current.left,\n                  top: settings.current.top,\n                  width: props.width,\n                  height: props.height,\n                  position: \"absolute\",\n                  visibility: props.visibility,\n                  zIndex: 2,\n                }}\n                ref={ref => {\n                  if (ref !== null) settingsRef.current.push(ref);\n                }}\n                key={\"animated-\" + i}\n              >\n                <C.SettingsDiv>\n                  {i === 0 && (\n                    <img\n                      src={widgetImage.current}\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        display: `${flipped ? \"none\" : \"block\"}`,\n                      }}\n                    />\n                  )}\n                  {flipped && i === 1 && (\n                    <C.SettingsDialog\n                      spring={i}\n                      flipped={flipped}\n                      open={open}\n                      onUpdate={onUpdate}\n                      widgetIndex={settings.current.widget}\n                      widgetSetting={\n                        widgetSettings.current[settings.current.widget]\n                      }\n                    />\n                  )}\n                </C.SettingsDiv>\n              </animated.div>\n            );\n          })}\n        </C.ModalBackground>\n      )}\n      <div style={{ overflow: \"hidden\" }}>\n        <Tabs\n          activeTab={activeTab}\n          onClick={tabClick}\n          style={{ height: \"100%\" }}\n        >\n          <TabList>\n            <Tab>{currentUser.name}</Tab>\n            <Tab>Work</Tab>\n            <Tab>Family</Tab>\n            <Tab>Hobbies</Tab>\n          </TabList>\n          <TabPanelList>\n            <TabPanel\n              style={{\n                height: \"100vh\",\n                paddingBottom: \"50px\",\n                overflow: \"auto\",\n              }}\n            >\n              <div style={{ overflow: \"hidden\" }}>\n                <C.SearchBox\n                  ref={searchBox}\n                  showHistory={setSearchHistory}\n                  chevronOpen={searchHistory}\n                  searchKey={setSearchKey}\n                  searchOpen={searchKey.length > 0}\n                  saveSearchKey={saveSearchKey}\n                />\n                {searchKey.length > 0 && !searchHistory && (\n                  <C.SearchResults\n                    searchBox={searchBox}\n                    searchKey={searchKey}\n                    roleKey={roleKeys[activeTab]}\n                    saveSearchResult={saveSearchResult}\n                  />\n                )}\n                {searchHistory && <C.SearchHistory searchBox={searchBox} />}\n              </div>\n              <div style={{ overflow: \"auto\" }}>\n                <C.WidgetContainer className={\"prifina-widget-container\"}>\n                  {widgetList.length > 0 && (\n                    <C.WidgetList\n                      widgetList={widgetList}\n                      widgetData={widgetConfig}\n                    />\n                  )}\n                </C.WidgetContainer>\n              </div>\n            </TabPanel>\n            <TabPanel>Work panel</TabPanel>\n            <TabPanel>Family panel</TabPanel>\n            <TabPanel>Hobbies panel</TabPanel>\n          </TabPanelList>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nDisplayApp.propTypes = {\n  widgetConfigData: PropTypes.array.isRequired,\n  appSyncClient: PropTypes.object.isRequired,\n  prifinaID: PropTypes.string.isRequired,\n  open: PropTypes.bool,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  visibility: PropTypes.string,\n  transform: PropTypes.string,\n};\nexport default DisplayApp;\n"],"sourceRoot":""}